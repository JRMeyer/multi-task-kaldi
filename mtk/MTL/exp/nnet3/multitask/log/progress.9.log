# nnet3-info MTL/exp/nnet3/multitask/9.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/8.raw MTL/exp/nnet3/multitask/9.raw 
# Started at Sat Jul 28 03:08:41 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/9.raw 
num-parameters: 13897312
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=168
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=168 output-dim=168
output-node name=output-0 input=output-0.log-softmax dim=168 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=184
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=184 output-dim=184
output-node name=output-1 input=output-1.log-softmax dim=184 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.1294, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.81,0.84,0.87 0.90,0.95,1.0,1.1,1.2 1.2,1.3,1.3,1.4), mean=1.04, stddev=0.106], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.1,3.1,3.2,3.3 3.4,3.5,3.6,3.7,3.8 3.8,3.8,3.9,4.0), mean=3.58, stddev=0.157], bias-{mean,stddev}=0.0296,1.029, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.84e+05, self-repaired-proportion=0.0420113, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.02 0.03,0.04,0.22,1.1,1.5 1.9,2.2,2.7,4.1), mean=0.558, stddev=0.674], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.07,0.09,0.34,0.83,0.91 0.93,0.95,0.95,0.99), mean=0.426, stddev=0.325], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.002,0.002,0.002,0.003 0.003,0.004,0.004,0.004), mean=0.00197, stddev=0.000534], oderiv-count=261120
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.03669, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0293], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0308], bias-{mean,stddev}=0.01172,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.28e+05, self-repaired-proportion=0.0368676, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.01,0.01,0.02 0.03,0.06,0.28,0.81,1.1 1.4,1.6,1.8,2.5), mean=0.448, stddev=0.448], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.07 0.11,0.18,0.47,0.79,0.88 0.91,0.94,0.94,0.96), mean=0.479, stddev=0.281], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.003,0.004,0.004), mean=0.00216, stddev=0.000514], oderiv-count=235520
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02602, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.99 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0223], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.70,0.72,0.74,0.75 0.76,0.76,0.77,0.82), mean=0.721, stddev=0.0206], bias-{mean,stddev}=0.01786,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.96e+04, self-repaired-proportion=0.0344587, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.01,0.01,0.02 0.04,0.08,0.31,0.92,1.3 1.7,2.0,2.1,3.4), mean=0.516, stddev=0.535], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.08 0.11,0.19,0.44,0.73,0.85 0.91,0.94,0.95,0.99), mean=0.464, stddev=0.268], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.004 0.004,0.005,0.005,0.006), mean=0.00272, stddev=0.000873], oderiv-count=143360
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02599, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0234], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.66,0.67,0.68 0.69,0.70,0.72,0.74,0.75 0.76,0.77,0.78,0.83), mean=0.72, stddev=0.0227], bias-{mean,stddev}=0.007561,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.14e+04, self-repaired-proportion=0.0199498, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.02,0.02 0.03,0.06,0.32,0.93,1.4 1.6,2.1,2.2,2.6), mean=0.519, stddev=0.552], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.06,0.06,0.08 0.10,0.17,0.43,0.73,0.85 0.92,0.94,0.95,0.98), mean=0.451, stddev=0.272], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.004 0.004,0.005,0.005,0.008), mean=0.00256, stddev=0.000832], oderiv-count=105984
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02599, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0234], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.70,0.72,0.74,0.75 0.76,0.77,0.77,0.80), mean=0.72, stddev=0.0213], bias-{mean,stddev}=0.02212,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.78e+04, self-repaired-proportion=0.0265512, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.01,0.01,0.02 0.03,0.08,0.35,0.98,1.4 1.7,2.1,2.3,3.1), mean=0.557, stddev=0.568], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.05,0.06,0.08 0.10,0.19,0.47,0.75,0.86 0.91,0.93,0.95,1.0), mean=0.469, stddev=0.271], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.004 0.004,0.005,0.005,0.006), mean=0.00259, stddev=0.000741], oderiv-count=114688
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.026, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0217], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.69,0.70,0.72,0.74,0.75 0.76,0.77,0.78,0.81), mean=0.72, stddev=0.0211], bias-{mean,stddev}=0.0459,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.81e+04, self-repaired-proportion=0.0219131, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.01,0.02,0.02 0.05,0.09,0.34,0.95,1.4 1.7,2.1,2.3,3.6), mean=0.551, stddev=0.565], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.06,0.07,0.09 0.13,0.20,0.45,0.74,0.84 0.90,0.93,0.94,0.98), mean=0.465, stddev=0.26], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.005,0.005,0.006), mean=0.00273, stddev=0.000713], oderiv-count=96768
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02603, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.98 0.99,1.0,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.023], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.70,0.70,0.72,0.74,0.75 0.76,0.77,0.77,0.83), mean=0.721, stddev=0.0215], bias-{mean,stddev}=0.01665,0.9738, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.61e+04, self-repaired-proportion=0.019768, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.02,0.02 0.05,0.10,0.37,0.99,1.3 1.7,2.1,2.5,4.8), mean=0.566, stddev=0.586], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.05,0.07,0.09 0.13,0.21,0.45,0.74,0.84 0.89,0.94,0.95,1.0), mean=0.47, stddev=0.258], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.004 0.004,0.005,0.005,0.005), mean=0.00293, stddev=0.000707], oderiv-count=64512
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02601, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.98,0.99 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0224], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.69 0.70,0.70,0.72,0.74,0.75 0.75,0.76,0.77,0.80), mean=0.72, stddev=0.0203], bias-{mean,stddev}=-0.05797,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.71e+04, self-repaired-proportion=0.0592658, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0001,0.004,0.01 0.03,0.06,0.31,0.99,1.5 1.8,2.3,2.6,3.5), mean=0.559, stddev=0.626], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.001,0.02,0.05 0.08,0.16,0.42,0.72,0.84 0.91,0.94,0.96,1.0), mean=0.445, stddev=0.275], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.005 0.005,0.006,0.006,0.007), mean=0.00342, stddev=0.000835], oderiv-count=66560
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02604, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.98 0.99,1.0,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.024], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.68 0.69,0.70,0.72,0.74,0.75 0.76,0.77,0.78,0.82), mean=0.721, stddev=0.0224], bias-{mean,stddev}=-0.05926,0.9981, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.28e+04, self-repaired-proportion=0.0640077, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,1e-06,0.0001,0.01 0.02,0.06,0.36,0.98,1.3 1.7,2.1,2.4,2.8), mean=0.547, stddev=0.57], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-05,0.001,0.05 0.09,0.16,0.45,0.72,0.85 0.90,0.93,0.95,1.0), mean=0.452, stddev=0.273], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.005 0.006,0.006,0.007,0.008), mean=0.0041, stddev=0.000933], oderiv-count=60416
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02604, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.98,0.98 0.99,1.0,1.0,1.0,1.1 1.1,1.1,1.1,1.2), mean=1.02, stddev=0.0243], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.68 0.70,0.70,0.72,0.74,0.75 0.76,0.77,0.77,0.82), mean=0.721, stddev=0.022], bias-{mean,stddev}=0.02928,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.92e+04, self-repaired-proportion=0.0917535, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0003,0.009 0.02,0.06,0.35,1.0,1.5 1.8,2.3,2.7,3.5), mean=0.572, stddev=0.62], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.002,0.04 0.07,0.16,0.46,0.75,0.85 0.91,0.96,0.97,1.0), mean=0.458, stddev=0.287], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.004,0.004 0.004,0.004,0.005,0.006,0.006 0.007,0.007,0.008,0.009), mean=0.00487, stddev=0.00104], oderiv-count=39168
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02615, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.98 0.99,1.0,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0273], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.69 0.70,0.71,0.72,0.74,0.75 0.76,0.78,0.78,0.82), mean=0.724, stddev=0.0229], bias-{mean,stddev}=0.03185,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.74e+04, self-repaired-proportion=0.171206, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0001 0.004,0.03,0.33,1.1,1.6 2.0,2.5,2.8,4.5), mean=0.615, stddev=0.707], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.002 0.02,0.11,0.44,0.77,0.89 0.93,0.97,0.99,1.0), mean=0.448, stddev=0.309], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.005,0.005 0.005,0.006,0.007,0.008,0.009 0.01,0.01,0.01,0.01), mean=0.0069, stddev=0.00141], oderiv-count=24576
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02628, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.97,0.97,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.03, stddev=0.0303], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.66,0.67,0.69 0.70,0.71,0.73,0.75,0.76 0.77,0.79,0.79,0.81), mean=0.728, stddev=0.0265], bias-{mean,stddev}=-0.06714,0.9593, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=9.22e+03, self-repaired-proportion=0.20685, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,1e-05 0.001,0.02,0.29,1.1,1.6 2.0,2.4,3.0,4.4), mean=0.59, stddev=0.707], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0001 0.008,0.07,0.40,0.75,0.87 0.92,0.97,0.99,1.0), mean=0.417, stddev=0.312], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.007,0.007 0.008,0.008,0.01,0.01,0.01 0.02,0.02,0.02,0.02), mean=0.0106, stddev=0.00258], oderiv-count=12288
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.03684, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.2), mean=1.02, stddev=0.0344], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.2), mean=1.02, stddev=0.0328], bias-{mean,stddev}=0.001351,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.35e+03, self-repaired-proportion=0.346191, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0001,0.01,0.31,1.2,1.8 2.3,2.7,2.9,4.4), mean=0.639, stddev=0.777], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0009,0.05,0.42,0.89,0.98 1.0,1.0,1.0,1.0), mean=0.456, stddev=0.363], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,3e-08,3e-08,4e-08 8e-05,0.002,0.02,0.02,0.02 0.03,0.03,0.03,0.05), mean=0.0133, stddev=0.00934], oderiv-count=6400
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=168, learning-rate=0.00133688, max-change=1.5, linear-params-rms=0.0278, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.40,0.55 0.62,0.66,0.77,0.85,0.89 0.95,0.98,1.0,1.3), mean=0.758, stddev=0.14], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-07,7e-07,7e-07,1e-06 0.002,0.04,0.34,0.49,0.55 0.59,0.61,0.67,0.88), mean=0.292, stddev=0.211], bias-{mean,stddev}=2.139e-07,0.003552, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=168, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.02,0.02 0.03,0.03,0.05,0.07,0.08 0.10,0.13,0.15,0.27), mean=0.0533, stddev=0.0311], oderiv-count=7168
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.03614, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0255], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0254], bias-{mean,stddev}=-0.0697,1.032, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.35e+03, self-repaired-proportion=0.372489, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 7e-05,0.004,0.22,0.96,1.4 1.8,2.2,2.6,3.3), mean=0.497, stddev=0.627], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0007,0.02,0.44,0.86,0.97 1.0,1.0,1.0,1.0), mean=0.454, stddev=0.364], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-09,4e-09,5e-09,8e-09 1e-05,0.0002,0.003,0.005,0.005 0.006,0.006,0.006,0.007), mean=0.0027, stddev=0.00198], oderiv-count=6912
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=184, learning-rate=0.00133688, max-change=1.5, linear-params-rms=0.01238, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,0.52,0.57 0.61,0.70,0.73,0.80), mean=0.255, stddev=0.229], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,2e-07,3e-07,5e-07 0.0005,0.01,0.14,0.24,0.26 0.28,0.30,0.32,0.38), mean=0.134, stddev=0.101], bias-{mean,stddev}=-4.722e-07,0.001946, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=184, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.05,0.05,0.06), mean=0.00811, stddev=0.0123], oderiv-count=7168
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/8.raw MTL/exp/nnet3/multitask/9.raw 
LOG (nnet3-show-progress[5.4.224~1-d4d9]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.56429 tdnn2.affine:1.39563 tdnn3.affine:1.57918 tdnn4.affine:1.37379 tdnn5.affine:1.18781 tdnn6.affine:1.11843 tdnn7.affine:1.0832 tdnn8.affine:1.09531 tdnn9.affine:1.15274 tdnn10.affine:1.18824 tdnn11.affine:1.29652 tdnnFINAL.affine:1.58387 prefinal-affine-task-0.affine:1.19006 output-0.affine:1.92618 prefinal-affine-task-1.affine:0.320781 output-1.affine:0.66993 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:40.6109 tdnn2.affine:40.5278 tdnn3.affine:39.7447 tdnn4.affine:39.6344 tdnn5.affine:39.8475 tdnn6.affine:39.7278 tdnn7.affine:39.0835 tdnn8.affine:40.8453 tdnn9.affine:39.5945 tdnn10.affine:40.1439 tdnn11.affine:40.06 tdnnFINAL.affine:39.0501 prefinal-affine-task-0.affine:39.7331 output-0.affine:9.98744 prefinal-affine-task-1.affine:39.8968 output-1.affine:4.65392 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0387104 tdnn2.affine:0.0344636 tdnn3.affine:0.0397775 tdnn4.affine:0.0346976 tdnn5.affine:0.0298379 tdnn6.affine:0.028181 tdnn7.affine:0.0277452 tdnn8.affine:0.0268446 tdnn9.affine:0.0291518 tdnn10.affine:0.02964 tdnn11.affine:0.0324141 tdnnFINAL.affine:0.0406456 prefinal-affine-task-0.affine:0.0299952 output-0.affine:0.203826 prefinal-affine-task-1.affine:0.0080418 output-1.affine:0.153028 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Sat Jul 28 03:08:42 UTC 2018, elapsed time 1 seconds

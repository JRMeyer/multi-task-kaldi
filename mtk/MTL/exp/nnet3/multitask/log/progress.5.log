# nnet3-info MTL/exp/nnet3/multitask/5.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/4.raw MTL/exp/nnet3/multitask/5.raw 
# Started at Fri Jul 27 01:00:09 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/5.raw 
num-parameters: 13891160
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=152
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=152 output-dim=152
output-node name=output-0 input=output-0.log-softmax dim=152 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=192
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=192 output-dim=192
output-node name=output-1 input=output-1.log-softmax dim=192 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.127, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.81,0.83,0.86 0.90,0.94,1.0,1.1,1.1 1.2,1.2,1.2,1.3), mean=1.02, stddev=0.0957], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.1,3.1,3.1,3.3 3.4,3.4,3.5,3.6,3.7 3.7,3.8,3.8,3.9), mean=3.52, stddev=0.145], bias-{mean,stddev}=0.03013,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.05e+05, self-repaired-proportion=0.0750145, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.02,0.02 0.03,0.04,0.16,1.0,1.5 1.8,2.1,2.6,5.0), mean=0.508, stddev=0.656], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.07,0.09,0.29,0.80,0.90 0.93,0.95,0.95,1.0), mean=0.402, stddev=0.319], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.005), mean=0.00191, stddev=0.00049], oderiv-count=286720
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.03655, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.95,0.97 0.98,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0274], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0283], bias-{mean,stddev}=0.01172,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.89e+05, self-repaired-proportion=0.0849144, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.009,0.01,0.02 0.03,0.06,0.26,0.77,1.1 1.3,1.5,1.6,2.8), mean=0.417, stddev=0.429], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.05,0.07 0.09,0.15,0.47,0.81,0.89 0.92,0.95,0.95,0.96), mean=0.479, stddev=0.294], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.002,0.003 0.003,0.003,0.003,0.004), mean=0.00206, stddev=0.000434], oderiv-count=307200
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02586, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0211], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.76,0.81), mean=0.716, stddev=0.0189], bias-{mean,stddev}=0.01785,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.7e+04, self-repaired-proportion=0.100873, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.005,0.007,0.01 0.03,0.06,0.27,0.92,1.4 1.8,2.0,2.1,2.6), mean=0.504, stddev=0.563], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.03,0.04,0.06 0.09,0.15,0.40,0.79,0.90 0.93,0.96,0.98,1.0), mean=0.457, stddev=0.298], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.004,0.004,0.005,0.006), mean=0.00241, stddev=0.000674], oderiv-count=133120
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02584, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.021], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.66,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.82), mean=0.716, stddev=0.0208], bias-{mean,stddev}=0.007494,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=9.45e+04, self-repaired-proportion=0.0917318, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.002,0.007,0.01 0.02,0.05,0.23,0.87,1.3 1.6,2.1,2.5,3.4), mean=0.482, stddev=0.573], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.009,0.03,0.06 0.08,0.14,0.37,0.75,0.88 0.92,0.96,0.99,1.0), mean=0.434, stddev=0.295], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.004,0.004,0.004,0.006), mean=0.00251, stddev=0.000641], oderiv-count=140544
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02584, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.99,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0211], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.79), mean=0.716, stddev=0.0195], bias-{mean,stddev}=0.02207,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.17e+04, self-repaired-proportion=0.0793457, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0001,0.002,0.01 0.03,0.06,0.28,0.91,1.3 1.7,1.9,2.1,2.8), mean=0.495, stddev=0.542], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.001,0.02,0.06 0.08,0.15,0.40,0.76,0.87 0.92,0.95,0.97,1.0), mean=0.449, stddev=0.29], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.004,0.004,0.005), mean=0.00267, stddev=0.000613], oderiv-count=120832
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02582, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0194], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.66,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.76,0.80), mean=0.715, stddev=0.0194], bias-{mean,stddev}=0.04589,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.81e+04, self-repaired-proportion=0.115967, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0004,0.003,0.009 0.02,0.05,0.30,0.96,1.4 1.7,2.0,2.4,4.0), mean=0.517, stddev=0.571], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.003,0.02,0.04 0.07,0.13,0.44,0.78,0.89 0.93,0.96,0.97,1.0), mean=0.457, stddev=0.303], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.004,0.004,0.005), mean=0.00274, stddev=0.000583], oderiv-count=103936
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02586, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.021], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.84), mean=0.716, stddev=0.0202], bias-{mean,stddev}=0.0166,0.9739, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.14e+04, self-repaired-proportion=0.123264, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0003,0.001,0.007 0.02,0.04,0.28,0.87,1.2 1.6,2.1,2.3,4.5), mean=0.485, stddev=0.563], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.003,0.01,0.04 0.07,0.13,0.43,0.75,0.87 0.93,0.97,0.99,1.0), mean=0.443, stddev=0.299], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.004,0.005,0.005), mean=0.00293, stddev=0.000603], oderiv-count=93696
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02583, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0194], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.76,0.79), mean=0.716, stddev=0.0192], bias-{mean,stddev}=-0.05801,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.53e+04, self-repaired-proportion=0.144848, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,4e-05,0.003 0.01,0.03,0.28,0.93,1.3 1.6,2.1,2.4,3.6), mean=0.497, stddev=0.567], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0004,0.02 0.05,0.10,0.42,0.78,0.88 0.92,0.96,0.98,1.0), mean=0.443, stddev=0.311], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.003,0.003,0.004,0.004 0.005,0.005,0.006,0.007), mean=0.00355, stddev=0.000675], oderiv-count=69120
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02585, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0207], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.76,0.80), mean=0.716, stddev=0.0199], bias-{mean,stddev}=-0.05929,0.9982, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.79e+04, self-repaired-proportion=0.159798, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,3e-06,0.0003 0.009,0.04,0.28,0.90,1.2 1.6,2.0,2.2,2.8), mean=0.485, stddev=0.54], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,3e-05,0.003 0.04,0.11,0.40,0.78,0.88 0.94,0.97,0.98,1.0), mean=0.435, stddev=0.311], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.004,0.004,0.005,0.005 0.006,0.006,0.006,0.007), mean=0.00431, stddev=0.000752], oderiv-count=60416
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02584, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0201], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.66,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.76,0.79), mean=0.716, stddev=0.0201], bias-{mean,stddev}=0.02928,1.028, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.61e+04, self-repaired-proportion=0.160065, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0005 0.009,0.03,0.28,0.97,1.4 1.7,2.0,2.3,2.9), mean=0.525, stddev=0.571], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.004 0.04,0.11,0.43,0.78,0.89 0.94,0.98,0.99,1.0), mean=0.454, stddev=0.315], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.004,0.005,0.005,0.006,0.007 0.007,0.007,0.008,0.009), mean=0.00538, stddev=0.000876], oderiv-count=41472
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.0259, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0221], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.67,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.80), mean=0.717, stddev=0.02], bias-{mean,stddev}=0.03183,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.69e+04, self-repaired-proportion=0.218846, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,2e-05 0.002,0.02,0.31,1.0,1.4 1.7,2.0,2.6,3.1), mean=0.54, stddev=0.608], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0004 0.01,0.08,0.43,0.79,0.89 0.94,0.98,1.0,1.0), mean=0.444, stddev=0.325], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.005,0.006 0.006,0.006,0.007,0.008,0.008 0.009,0.01,0.01,0.01), mean=0.00695, stddev=0.00104], oderiv-count=30208
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.02594, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0231], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.66,0.67,0.68 0.69,0.70,0.72,0.74,0.75 0.75,0.76,0.77,0.79), mean=0.718, stddev=0.0217], bias-{mean,stddev}=-0.06715,0.9593, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.05e+04, self-repaired-proportion=0.234473, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,3e-06 0.0007,0.01,0.29,1.0,1.4 1.7,2.1,2.6,3.7), mean=0.523, stddev=0.611], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0001 0.005,0.05,0.40,0.77,0.86 0.93,0.97,0.99,1.0), mean=0.422, stddev=0.32], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.008,0.008 0.008,0.009,0.01,0.01,0.01 0.02,0.02,0.02,0.02), mean=0.0111, stddev=0.0025], oderiv-count=16640
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.03647, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.96 0.97,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0286], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.96,0.96 0.98,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0275], bias-{mean,stddev}=0.0013,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.1e+03, self-repaired-proportion=0.351237, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 9e-05,0.008,0.27,1.2,1.6 2.1,2.5,2.8,3.9), mean=0.591, stddev=0.722], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.001,0.04,0.41,0.85,0.97 0.99,1.0,1.0,1.0), mean=0.452, stddev=0.36], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,3e-08,3e-08,5e-08 0.0001,0.002,0.01,0.02,0.02 0.02,0.02,0.03,0.03), mean=0.0119, stddev=0.00835], oderiv-count=8704
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=152, learning-rate=0.00133688, max-change=1.5, linear-params-rms=0.02282, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.16,0.37,0.47 0.49,0.53,0.63,0.69,0.71 0.79,0.84,1.1,1.2), mean=0.619, stddev=0.131], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,6e-07,7e-07,1e-06 0.003,0.03,0.26,0.39,0.43 0.45,0.48,0.51,0.57), mean=0.228, stddev=0.165], bias-{mean,stddev}=-4.865e-08,0.002956, rank-in=20, rank-out=76, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=152, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.02,0.02 0.03,0.04,0.05,0.07,0.08 0.10,0.13,0.19,0.24), mean=0.0569, stddev=0.0313], oderiv-count=8448
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00133688, max-change=0.75, linear-params-rms=0.03608, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=1, stddev=0.0252], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=1, stddev=0.0251], bias-{mean,stddev}=-0.06973,1.032, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.14e+03, self-repaired-proportion=0.345176, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 3e-05,0.004,0.24,0.89,1.3 1.7,2.0,2.2,3.2), mean=0.474, stddev=0.568], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0003,0.02,0.44,0.87,0.95 0.99,1.0,1.0,1.0), mean=0.462, stddev=0.369], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-09,6e-09,7e-09,8e-09 7e-06,0.0001,0.002,0.004,0.004 0.005,0.005,0.005,0.006), mean=0.00212, stddev=0.00162], oderiv-count=6912
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=192, learning-rate=0.00133688, max-change=1.5, linear-params-rms=0.01048, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,0.42,0.47 0.51,0.58,0.72,0.76), mean=0.225, stddev=0.183], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,3e-07,4e-07,4e-07 0.0003,0.007,0.12,0.20,0.23 0.25,0.28,0.28,0.33), mean=0.115, stddev=0.089], bias-{mean,stddev}=1.753e-08,0.001703, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=192, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.02 0.03,0.05,0.05,0.07), mean=0.0081, stddev=0.0119], oderiv-count=6912
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/4.raw MTL/exp/nnet3/multitask/5.raw 
LOG (nnet3-show-progress[5.4.217~1-8ae5]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.59177 tdnn2.affine:1.23818 tdnn3.affine:1.40188 tdnn4.affine:1.30399 tdnn5.affine:1.22977 tdnn6.affine:1.1849 tdnn7.affine:1.19939 tdnn8.affine:1.22591 tdnn9.affine:1.27074 tdnn10.affine:1.31914 tdnn11.affine:1.43447 tdnnFINAL.affine:1.68667 prefinal-affine-task-0.affine:1.18362 output-0.affine:2.22158 prefinal-affine-task-1.affine:0.32576 output-1.affine:0.934386 ]
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:40.185 tdnn2.affine:40.458 tdnn3.affine:39.626 tdnn4.affine:39.516 tdnn5.affine:39.7312 tdnn6.affine:39.5948 tdnn7.affine:38.9564 tdnn8.affine:40.7159 tdnn9.affine:39.4457 tdnn10.affine:39.9873 tdnn11.affine:39.8676 tdnnFINAL.affine:38.7786 prefinal-affine-task-0.affine:39.5287 output-0.affine:7.79557 prefinal-affine-task-1.affine:39.8638 output-1.affine:4.02335 ]
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0397448 tdnn2.affine:0.0306229 tdnn3.affine:0.0354051 tdnn4.affine:0.0330262 tdnn5.affine:0.0309779 tdnn6.affine:0.0299504 tdnn7.affine:0.0308151 tdnn8.affine:0.0301342 tdnn9.affine:0.0322466 tdnn10.affine:0.0330224 tdnn11.affine:0.0360252 tdnnFINAL.affine:0.0435677 prefinal-affine-task-0.affine:0.0299778 output-0.affine:0.316247 prefinal-affine-task-1.affine:0.00817282 output-1.affine:0.262834 ]
# Accounting: time=2 threads=1
# Ended (code 0) at Fri Jul 27 01:00:11 UTC 2018, elapsed time 2 seconds

# nnet3-info MTL/exp/nnet3/multitask/5.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/4.raw MTL/exp/nnet3/multitask/5.raw 
# Started at Sat Jul 28 03:08:14 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/5.raw 
num-parameters: 13897312
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=168
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=168 output-dim=168
output-node name=output-0 input=output-0.log-softmax dim=168 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=184
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=184 output-dim=184
output-node name=output-1 input=output-1.log-softmax dim=184 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.1254, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.80,0.83,0.86 0.89,0.93,1.0,1.1,1.1 1.2,1.2,1.2,1.3), mean=1.01, stddev=0.0918], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.1,3.1,3.1,3.2 3.3,3.4,3.5,3.6,3.6 3.7,3.7,3.8,3.9), mean=3.47, stddev=0.138], bias-{mean,stddev}=0.02953,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.89e+05, self-repaired-proportion=0.0976562, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.02,0.02 0.02,0.03,0.13,0.88,1.4 1.9,2.6,3.3,5.6), mean=0.489, stddev=0.719], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.05 0.06,0.08,0.24,0.73,0.90 0.93,0.95,0.96,1.0), mean=0.375, stddev=0.314], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.0009,0.0009,0.001 0.001,0.001,0.001,0.002,0.002 0.002,0.003,0.003,0.003), mean=0.00146, stddev=0.000418], oderiv-count=261120
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.0365, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.95,0.95,0.97 0.97,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0282], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.94,0.96,0.96 0.97,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0288], bias-{mean,stddev}=0.01172,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.74e+05, self-repaired-proportion=0.112981, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.004,0.01,0.02 0.03,0.06,0.25,0.75,1.0 1.2,1.6,1.7,2.5), mean=0.406, stddev=0.421], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.02,0.05,0.07 0.11,0.18,0.46,0.80,0.91 0.93,0.95,0.97,1.0), mean=0.486, stddev=0.292], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.002 0.002,0.003,0.003,0.003), mean=0.00162, stddev=0.00043], oderiv-count=271360
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02584, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0209], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.67,0.68,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.76,0.82), mean=0.716, stddev=0.0191], bias-{mean,stddev}=0.01787,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.68e+04, self-repaired-proportion=0.128534, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-06,0.004,0.007,0.02 0.03,0.07,0.30,0.87,1.3 1.7,2.2,2.5,3.4), mean=0.512, stddev=0.574], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.02,0.04,0.07 0.10,0.18,0.45,0.76,0.87 0.94,0.97,0.98,1.0), mean=0.474, stddev=0.282], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0009,0.0009,0.001 0.001,0.001,0.001,0.002,0.002 0.003,0.003,0.004,0.005), mean=0.00164, stddev=0.000607], oderiv-count=120320
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02583, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0212], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.66,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.81), mean=0.715, stddev=0.0212], bias-{mean,stddev}=0.007588,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.06e+04, self-repaired-proportion=0.12154, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.002,0.006,0.02 0.02,0.05,0.31,0.95,1.4 1.9,2.3,2.4,3.4), mean=0.535, stddev=0.606], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.03,0.06 0.08,0.15,0.45,0.75,0.87 0.93,0.97,0.99,1.0), mean=0.459, stddev=0.287], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0008,0.0009,0.0009 0.001,0.001,0.001,0.002,0.002 0.003,0.003,0.003,0.005), mean=0.00152, stddev=0.000573], oderiv-count=126720
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02583, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0217], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.67,0.67,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.79), mean=0.716, stddev=0.0196], bias-{mean,stddev}=0.02212,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.35e+04, self-repaired-proportion=0.107794, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0004,0.003,0.01 0.02,0.06,0.31,1.0,1.5 1.9,2.2,2.5,3.1), mean=0.561, stddev=0.611], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.002,0.02,0.05 0.07,0.15,0.47,0.77,0.88 0.93,0.95,0.98,1.0), mean=0.467, stddev=0.292], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0008,0.0008,0.0009 0.0009,0.001,0.001,0.002,0.002 0.002,0.003,0.003,0.004), mean=0.00143, stddev=0.000493], oderiv-count=110592
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02583, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0203], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.81), mean=0.716, stddev=0.0198], bias-{mean,stddev}=0.04592,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.73e+04, self-repaired-proportion=0.0776311, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-07,0.002,0.005,0.01 0.03,0.07,0.33,0.97,1.4 1.8,2.2,2.5,4.2), mean=0.557, stddev=0.608], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.01,0.03,0.06 0.10,0.18,0.45,0.75,0.87 0.93,0.95,0.97,1.0), mean=0.467, stddev=0.279], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0009,0.0009,0.001 0.001,0.001,0.001,0.002,0.002 0.002,0.003,0.003,0.004), mean=0.00149, stddev=0.000467], oderiv-count=91392
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02586, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0212], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.83), mean=0.716, stddev=0.0204], bias-{mean,stddev}=0.01666,0.9738, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.53e+04, self-repaired-proportion=0.0957374, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0007,0.004,0.01 0.03,0.08,0.37,0.99,1.5 1.8,2.3,2.6,5.1), mean=0.574, stddev=0.624], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.005,0.03,0.05 0.09,0.19,0.45,0.75,0.85 0.92,0.96,0.98,1.0), mean=0.468, stddev=0.274], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.0009,0.001,0.001 0.001,0.001,0.001,0.002,0.002 0.002,0.003,0.003,0.004), mean=0.00158, stddev=0.000451], oderiv-count=82944
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02583, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.97,0.97,0.98 0.99,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0202], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.69 0.69,0.70,0.71,0.73,0.74 0.75,0.76,0.77,0.79), mean=0.715, stddev=0.0189], bias-{mean,stddev}=-0.05798,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.89e+04, self-repaired-proportion=0.126266, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,8e-07,0.0001,0.005 0.01,0.04,0.32,0.96,1.5 2.0,2.5,2.8,3.8), mean=0.564, stddev=0.666], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-05,0.001,0.03 0.06,0.13,0.42,0.74,0.86 0.92,0.96,0.98,1.0), mean=0.442, stddev=0.288], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.002 0.003,0.003,0.003,0.004), mean=0.00175, stddev=0.000493], oderiv-count=61440
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02583, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0216], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.80), mean=0.716, stddev=0.0203], bias-{mean,stddev}=-0.05926,0.9982, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.38e+04, self-repaired-proportion=0.146361, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.002 0.009,0.04,0.34,1.1,1.4 1.9,2.3,2.7,3.2), mean=0.558, stddev=0.629], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.01 0.05,0.13,0.45,0.73,0.87 0.94,0.96,0.98,1.0), mean=0.448, stddev=0.294], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.004,0.004,0.004,0.005), mean=0.00237, stddev=0.000632], oderiv-count=54272
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02582, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0216], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.66,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.81), mean=0.715, stddev=0.02], bias-{mean,stddev}=0.02929,1.028, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.3e+04, self-repaired-proportion=0.16091, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.002 0.009,0.03,0.33,1.1,1.5 2.0,2.5,3.1,3.9), mean=0.59, stddev=0.689], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.02 0.05,0.12,0.45,0.77,0.87 0.94,0.98,0.99,1.0), mean=0.456, stddev=0.306], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.005,0.005,0.007), mean=0.00285, stddev=0.000699], oderiv-count=38400
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02588, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.98 0.98,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0231], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.67,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.81), mean=0.717, stddev=0.0204], bias-{mean,stddev}=0.03185,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.59e+04, self-repaired-proportion=0.250701, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0005,0.02,0.30,1.2,1.8 2.2,2.8,3.1,5.0), mean=0.636, stddev=0.79], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.005,0.06,0.42,0.81,0.93 0.96,0.99,1.0,1.0), mean=0.447, stddev=0.333], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.005 0.006,0.006,0.007,0.008), mean=0.00412, stddev=0.000926], oderiv-count=27136
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.02592, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.97,0.97,0.98 0.99,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0234], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.66,0.66,0.68 0.69,0.70,0.72,0.74,0.75 0.75,0.76,0.77,0.79), mean=0.718, stddev=0.0218], bias-{mean,stddev}=-0.06711,0.9594, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=9.73e+03, self-repaired-proportion=0.313239, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 6e-05,0.005,0.23,1.3,1.8 2.3,3.0,3.5,5.2), mean=0.64, stddev=0.84], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0007,0.03,0.37,0.80,0.92 0.97,1.0,1.0,1.0), mean=0.419, stddev=0.345], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.005,0.006,0.007,0.009,0.01 0.01,0.01,0.01,0.02), mean=0.00755, stddev=0.00198], oderiv-count=14592
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.03644, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.95,0.96 0.97,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.2), mean=1.01, stddev=0.0295], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.96,0.96 0.97,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0282], bias-{mean,stddev}=0.001439,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.61e+03, self-repaired-proportion=0.502083, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.001,0.22,1.3,2.1 2.5,3.0,3.2,4.8), mean=0.676, stddev=0.877], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.01,0.40,0.96,1.0 1.0,1.0,1.0,1.0), mean=0.458, stddev=0.395], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,2e-08,3e-08,3e-08 5e-08,0.0009,0.01,0.02,0.02 0.02,0.02,0.02,0.04), mean=0.00965, stddev=0.00733], oderiv-count=7424
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=168, learning-rate=0.00141609, max-change=1.5, linear-params-rms=0.02053, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.23,0.32 0.40,0.46,0.55,0.64,0.69 0.73,0.81,0.96,1.2), mean=0.552, stddev=0.139], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-07,6e-07,7e-07,8e-07 1e-06,0.02,0.24,0.37,0.42 0.45,0.49,0.52,0.72), mean=0.209, stddev=0.164], bias-{mean,stddev}=2.137e-07,0.003136, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=168, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.01,0.02 0.03,0.03,0.05,0.07,0.08 0.10,0.13,0.15,0.26), mean=0.0533, stddev=0.0311], oderiv-count=7424
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00141609, max-change=0.75, linear-params-rms=0.03608, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0253], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=1, stddev=0.0252], bias-{mean,stddev}=-0.06966,1.032, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.12e+03, self-repaired-proportion=0.449904, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.0007,0.19,1.0,1.5 2.1,2.5,2.8,3.7), mean=0.519, stddev=0.7], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.008,0.43,0.91,0.99 1.0,1.0,1.0,1.0), mean=0.451, stddev=0.381], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-09,4e-09,5e-09,5e-09 8e-09,7e-05,0.002,0.003,0.004 0.004,0.004,0.004,0.006), mean=0.0017, stddev=0.00136], oderiv-count=6912
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=184, learning-rate=0.00141609, max-change=1.5, linear-params-rms=0.008808, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,0.36,0.42 0.44,0.50,0.64,0.68), mean=0.187, stddev=0.157], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,2e-07,2e-07,3e-07 5e-07,0.003,0.09,0.17,0.19 0.21,0.24,0.26,0.30), mean=0.0923, stddev=0.0759], bias-{mean,stddev}=-4.572e-07,0.001708, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=184, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.04,0.05,0.06), mean=0.00807, stddev=0.0123], oderiv-count=6912
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/4.raw MTL/exp/nnet3/multitask/5.raw 
LOG (nnet3-show-progress[5.4.224~1-d4d9]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.71944 tdnn2.affine:1.23481 tdnn3.affine:1.22029 tdnn4.affine:1.04675 tdnn5.affine:0.92312 tdnn6.affine:0.853155 tdnn7.affine:0.817394 tdnn8.affine:0.833671 tdnn9.affine:0.886656 tdnn10.affine:0.920482 tdnn11.affine:1.04934 tdnnFINAL.affine:1.33613 prefinal-affine-task-0.affine:1.11526 output-0.affine:2.60522 prefinal-affine-task-1.affine:0.297485 output-1.affine:1.02472 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:39.9605 tdnn2.affine:40.4334 tdnn3.affine:39.61 tdnn4.affine:39.5058 tdnn5.affine:39.7236 tdnn6.affine:39.6011 tdnn7.affine:38.9512 tdnn8.affine:40.7097 tdnn9.affine:39.4325 tdnn10.affine:39.9707 tdnn11.affine:39.8563 tdnnFINAL.affine:38.7634 prefinal-affine-task-0.affine:39.513 output-0.affine:7.37331 prefinal-affine-task-1.affine:39.8662 output-1.affine:3.31122 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.043154 tdnn2.affine:0.0305544 tdnn3.affine:0.0308216 tdnn4.affine:0.0265073 tdnn5.affine:0.023248 tdnn6.affine:0.0215518 tdnn7.affine:0.0209932 tdnn8.affine:0.0204862 tdnn9.affine:0.022496 tdnn10.affine:0.0230408 tdnn11.affine:0.0263454 tdnnFINAL.affine:0.0345042 prefinal-affine-task-0.affine:0.0282526 output-0.affine:0.402724 prefinal-affine-task-1.affine:0.00746329 output-1.affine:0.350546 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Sat Jul 28 03:08:14 UTC 2018, elapsed time 0 seconds

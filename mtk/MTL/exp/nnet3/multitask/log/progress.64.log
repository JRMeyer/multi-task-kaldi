# nnet3-info MTL/exp/nnet3/multitask/64.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/63.raw MTL/exp/nnet3/multitask/64.raw 
# Started at Sat Jul 28 03:17:57 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/64.raw 
num-parameters: 13897312
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=168
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=168 output-dim=168
output-node name=output-0 input=output-0.log-softmax dim=168 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=184
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=184 output-dim=184
output-node name=output-1 input=output-1.log-softmax dim=184 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.1469, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.83,0.87,0.92 0.96,1.0,1.1,1.3,1.4 1.5,1.6,1.7,1.9), mean=1.17, stddev=0.181], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.6,3.6,3.7,3.7 3.8,3.9,4.0,4.2,4.3 4.4,4.5,4.6,4.7), mean=4.06, stddev=0.22], bias-{mean,stddev}=0.0284,1.034, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.69e+05, self-repaired-proportion=0.00151323, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.04,0.06,0.28,1.4,1.8 2.2,2.8,3.1,6.1), mean=0.685, stddev=0.791], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.08 0.09,0.13,0.40,0.86,0.90 0.92,0.93,0.94,0.95), mean=0.472, stddev=0.321], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.0005,0.0005,0.0006 0.0006,0.0006,0.0008,0.001,0.001 0.001,0.001,0.002,0.002), mean=0.000841, stddev=0.000247], oderiv-count=250880
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.03808, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.99 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.2,1.2), mean=1.05, stddev=0.043], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.96,0.97,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.2,1.2,1.3), mean=1.05, stddev=0.0533], bias-{mean,stddev}=0.01179,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.64e+05, self-repaired-proportion=0.000269397, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.03,0.04 0.05,0.09,0.33,0.94,1.3 1.5,1.8,2.1,2.8), mean=0.519, stddev=0.503], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.10,0.11,0.13 0.15,0.21,0.42,0.72,0.82 0.86,0.90,0.91,0.92), mean=0.459, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0007,0.0007,0.0007 0.0007,0.0008,0.0009,0.001,0.001 0.001,0.002,0.002,0.002), mean=0.000992, stddev=0.000235], oderiv-count=256000
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.02758, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,1.0,1.0,1.0 1.0,1.0,1.1,1.1,1.1 1.2,1.2,1.2,1.2), mean=1.08, stddev=0.0451], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.70 0.71,0.72,0.76,0.80,0.83 0.85,0.87,0.88,0.92), mean=0.763, stddev=0.0459], bias-{mean,stddev}=0.01776,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.19e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.04,0.05 0.08,0.14,0.42,0.99,1.3 1.5,2.0,2.2,3.0), mean=0.586, stddev=0.52], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.10,0.13 0.16,0.23,0.42,0.64,0.76 0.81,0.87,0.89,0.92), mean=0.443, stddev=0.216], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.0009,0.0009,0.001 0.001,0.001,0.001,0.002,0.002 0.002,0.002,0.002,0.003), mean=0.00137, stddev=0.000345], oderiv-count=135680
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.02771, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.99,1.0,1.0 1.0,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.2), mean=1.08, stddev=0.0498], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.69,0.70 0.71,0.72,0.76,0.81,0.83 0.85,0.87,0.89,0.94), mean=0.766, stddev=0.0471], bias-{mean,stddev}=0.007472,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=9.45e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.03,0.06 0.08,0.14,0.41,0.89,1.3 1.5,1.9,2.0,2.5), mean=0.551, stddev=0.484], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.09,0.13 0.15,0.22,0.42,0.62,0.73 0.81,0.86,0.88,0.91), mean=0.43, stddev=0.213], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.002 0.002,0.003,0.003,0.003), mean=0.00158, stddev=0.000367], oderiv-count=117504
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.02789, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,1.0,1.0,1.0 1.0,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.2), mean=1.09, stddev=0.05], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.69,0.70,0.71 0.71,0.73,0.77,0.81,0.84 0.86,0.88,0.89,0.98), mean=0.771, stddev=0.0483], bias-{mean,stddev}=0.02203,1.014, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.55e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.06 0.09,0.16,0.41,0.94,1.2 1.5,1.8,2.0,2.5), mean=0.561, stddev=0.466], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.10,0.13 0.17,0.25,0.43,0.64,0.74 0.79,0.84,0.89,0.93), mean=0.445, stddev=0.207], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.002 0.002,0.003,0.003,0.003), mean=0.00184, stddev=0.000379], oderiv-count=102400
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.02813, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1,1.2 1.2,1.2,1.2,1.2), mean=1.1, stddev=0.0488], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.69,0.71 0.72,0.73,0.78,0.82,0.84 0.86,0.88,0.88,0.93), mean=0.778, stddev=0.0473], bias-{mean,stddev}=0.0458,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.02e+04, self-repaired-proportion=0.000140766, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.05,0.07 0.11,0.18,0.41,0.87,1.2 1.5,1.9,2.1,2.6), mean=0.549, stddev=0.456], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.10,0.15 0.19,0.25,0.42,0.63,0.73 0.80,0.85,0.88,0.93), mean=0.444, stddev=0.199], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.002,0.003 0.003,0.003,0.003,0.004), mean=0.00207, stddev=0.00038], oderiv-count=78848
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.02837, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.11, stddev=0.0512], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.69,0.70,0.71 0.72,0.74,0.78,0.83,0.85 0.87,0.88,0.90,0.98), mean=0.785, stddev=0.0479], bias-{mean,stddev}=0.01654,0.9737, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.61e+04, self-repaired-proportion=0.00317383, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.03,0.06,0.09 0.12,0.18,0.41,0.85,1.1 1.5,1.9,2.1,3.7), mean=0.548, stddev=0.461], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.08,0.12,0.16 0.21,0.27,0.42,0.63,0.73 0.80,0.86,0.91,1.0), mean=0.447, stddev=0.196], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.003,0.003,0.004), mean=0.00231, stddev=0.000386], oderiv-count=79872
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.02857, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,1.0,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.12, stddev=0.0599], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.70,0.71,0.72 0.73,0.74,0.79,0.84,0.86 0.87,0.89,0.90,0.95), mean=0.79, stddev=0.0489], bias-{mean,stddev}=-0.05804,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.1e+04, self-repaired-proportion=0.00423177, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.02,0.03,0.05 0.08,0.15,0.37,0.91,1.2 1.6,1.9,2.2,2.7), mean=0.544, stddev=0.499], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.06,0.07,0.11 0.15,0.23,0.41,0.63,0.74 0.83,0.90,0.92,0.96), mean=0.432, stddev=0.22], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.003 0.003,0.004,0.004,0.004), mean=0.00258, stddev=0.000469], oderiv-count=70400
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.02878, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.99,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.13, stddev=0.0644], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.74,0.79,0.85,0.87 0.89,0.91,0.92,0.97), mean=0.796, stddev=0.0567], bias-{mean,stddev}=-0.05935,0.998, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.79e+04, self-repaired-proportion=0.016183, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.004,0.02,0.05 0.08,0.15,0.40,0.82,1.2 1.4,1.8,2.0,2.5), mean=0.521, stddev=0.444], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.06,0.11 0.16,0.24,0.43,0.62,0.73 0.81,0.86,0.91,0.98), mean=0.433, stddev=0.211], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.004 0.004,0.004,0.004,0.005), mean=0.00311, stddev=0.000571], oderiv-count=53248
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.02875, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.99,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.3,1.3), mean=1.13, stddev=0.0652], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.69,0.70,0.71 0.72,0.74,0.79,0.85,0.87 0.88,0.90,0.91,0.94), mean=0.795, stddev=0.0547], bias-{mean,stddev}=0.02918,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.15e+04, self-repaired-proportion=0.0255301, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.003,0.01,0.04 0.07,0.15,0.39,0.87,1.2 1.5,1.8,2.2,2.7), mean=0.54, stddev=0.483], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.01,0.05,0.09 0.13,0.23,0.43,0.64,0.76 0.82,0.91,0.92,0.99), mean=0.439, stddev=0.225], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.004,0.004 0.005,0.005,0.005,0.005), mean=0.0035, stddev=0.000645], oderiv-count=39936
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.02884, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.97,0.98,1.0 1.0,1.0,1.1,1.2,1.2 1.2,1.3,1.3,1.3), mean=1.13, stddev=0.0764], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.74,0.80,0.85,0.87 0.89,0.90,0.91,0.96), mean=0.797, stddev=0.0556], bias-{mean,stddev}=0.03176,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.59e+04, self-repaired-proportion=0.0699013, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0002,0.0008,0.01 0.03,0.10,0.38,0.88,1.3 1.6,1.9,2.4,3.3), mean=0.542, stddev=0.537], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.001,0.005,0.04 0.09,0.18,0.42,0.65,0.78 0.86,0.93,0.96,1.0), mean=0.427, stddev=0.25], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.005 0.006,0.006,0.006,0.007), mean=0.0043, stddev=0.000866], oderiv-count=27648
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.0291, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,1.0 1.0,1.0,1.1,1.2,1.2 1.3,1.3,1.3,1.3), mean=1.14, stddev=0.0877], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.69,0.70 0.71,0.73,0.80,0.87,0.89 0.91,0.93,0.94,0.99), mean=0.803, stddev=0.0681], bias-{mean,stddev}=-0.06729,0.9591, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.45e+03, self-repaired-proportion=0.0974318, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0002,0.002 0.02,0.08,0.34,0.75,1.0 1.3,1.7,1.9,2.6), mean=0.448, stddev=0.436], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0008,0.009 0.05,0.15,0.37,0.58,0.68 0.76,0.86,0.90,0.98), mean=0.377, stddev=0.231], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.005,0.005,0.006,0.007,0.008 0.008,0.009,0.009,0.01), mean=0.00618, stddev=0.0013], oderiv-count=11520
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.03885, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.99,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.3), mean=1.07, stddev=0.0707], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.99,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.3), mean=1.07, stddev=0.062], bias-{mean,stddev}=0.0007519,1.006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.58e+03, self-repaired-proportion=0.129749, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0001,0.001 0.006,0.05,0.34,0.71,0.87 1.0,1.1,1.2,1.5), mean=0.394, stddev=0.335], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0003,0.005 0.02,0.12,0.38,0.63,0.71 0.75,0.78,0.80,0.84), mean=0.382, stddev=0.241], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-09,5e-06,2e-05,9e-05 0.0004,0.001,0.006,0.008,0.008 0.009,0.01,0.01,0.02), mean=0.00507, stddev=0.00305], oderiv-count=7936
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=168, learning-rate=0.000605817, max-change=1.5, linear-params-rms=0.04982, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.89,1.1 1.1,1.2,1.4,1.5,1.6 1.7,1.7,1.8,2.0), mean=1.36, stddev=0.235], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-07,0.0005,0.002,0.008 0.03,0.14,0.65,0.87,0.93 1.0,1.1,1.1,1.3), mean=0.546, stddev=0.345], bias-{mean,stddev}=2.146e-07,0.003937, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=168, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.01,0.02 0.03,0.04,0.05,0.06,0.08 0.09,0.13,0.15,0.25), mean=0.0534, stddev=0.0303], oderiv-count=6656
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000605817, max-change=0.75, linear-params-rms=0.03658, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.95,0.95,0.96 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.2), mean=1.01, stddev=0.0313], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0288], bias-{mean,stddev}=-0.07022,1.031, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.1e+03, self-repaired-proportion=0.160663, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,4e-05,0.0007 0.007,0.03,0.27,0.59,0.73 0.85,1.0,1.1,1.3), mean=0.321, stddev=0.286], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0002,0.003 0.03,0.08,0.43,0.69,0.77 0.84,0.87,0.89,0.96), mean=0.408, stddev=0.279], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-09,3e-08,1e-05,8e-05 0.0003,0.0009,0.005,0.006,0.007 0.007,0.008,0.008,0.009), mean=0.00401, stddev=0.00248], oderiv-count=8192
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=184, learning-rate=0.000605817, max-change=1.5, linear-params-rms=0.02759, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,1.2,1.3 1.4,1.5,1.5,1.6), mean=0.528, stddev=0.553], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,2e-06,0.0009,0.006 0.02,0.06,0.36,0.51,0.55 0.58,0.61,0.63,0.72), mean=0.317, stddev=0.2], bias-{mean,stddev}=-5.412e-07,0.002184, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=184, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.04,0.05,0.05), mean=0.00805, stddev=0.0123], oderiv-count=6144
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/63.raw MTL/exp/nnet3/multitask/64.raw 
LOG (nnet3-show-progress[5.4.224~1-d4d9]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.319686 tdnn2.affine:0.206167 tdnn3.affine:0.279923 tdnn4.affine:0.305834 tdnn5.affine:0.322122 tdnn6.affine:0.340145 tdnn7.affine:0.358593 tdnn8.affine:0.372836 tdnn9.affine:0.393053 tdnn10.affine:0.392956 tdnn11.affine:0.393312 tdnnFINAL.affine:0.402163 prefinal-affine-task-0.affine:0.210835 output-0.affine:0.180753 prefinal-affine-task-1.affine:0.170892 output-1.affine:0.115926 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:43.5695 tdnn2.affine:41.2736 tdnn3.affine:40.9647 tdnn4.affine:40.9785 tdnn5.affine:41.3349 tdnn6.affine:41.4057 tdnn7.affine:40.9623 tdnn8.affine:42.8111 tdnn9.affine:41.7719 tdnn10.affine:42.2677 tdnn11.affine:42.177 tdnnFINAL.affine:41.3361 prefinal-affine-task-0.affine:40.8361 output-0.affine:17.897 prefinal-affine-task-1.affine:40.1202 output-1.affine:10.3719 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0073388 tdnn2.affine:0.00499545 tdnn3.affine:0.00683378 tdnn4.affine:0.00746392 tdnn5.affine:0.00779372 tdnn6.affine:0.00821588 tdnn7.affine:0.0087554 tdnn8.affine:0.00871 tdnn9.affine:0.00941082 tdnn10.affine:0.0092981 tdnn11.affine:0.00932657 tdnnFINAL.affine:0.00973035 prefinal-affine-task-0.affine:0.0051632 output-0.affine:0.0101164 prefinal-affine-task-1.affine:0.00425954 output-1.affine:0.0112169 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Sat Jul 28 03:17:57 UTC 2018, elapsed time 0 seconds

# nnet3-info MTL/exp/nnet3/multitask/48.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/47.raw MTL/exp/nnet3/multitask/48.raw 
# Started at Sat Jul 28 03:15:10 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/48.raw 
num-parameters: 13897312
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=168
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=168 output-dim=168
output-node name=output-0 input=output-0.log-softmax dim=168 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=184
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=184 output-dim=184
output-node name=output-1 input=output-1.log-softmax dim=184 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.146, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.83,0.87,0.91 0.95,1.0,1.1,1.3,1.4 1.5,1.6,1.7,1.9), mean=1.16, stddev=0.178], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.6,3.6,3.7,3.7 3.8,3.9,4.0,4.2,4.3 4.4,4.5,4.6,4.6), mean=4.04, stddev=0.219], bias-{mean,stddev}=0.02859,1.034, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.48e+05, self-repaired-proportion=0.00890343, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.02,0.02,0.03 0.04,0.06,0.32,1.4,1.8 2.2,2.9,3.2,6.4), mean=0.703, stddev=0.82], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.07 0.09,0.12,0.41,0.85,0.91 0.93,0.94,0.95,0.95), mean=0.472, stddev=0.326], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0008,0.0009,0.0009 0.0009,0.001,0.001,0.002,0.002 0.002,0.002,0.003,0.003), mean=0.00133, stddev=0.000396], oderiv-count=245760
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.03796, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.2,1.2), mean=1.05, stddev=0.0417], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.96,0.97,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.2,1.2,1.3), mean=1.05, stddev=0.0513], bias-{mean,stddev}=0.01179,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.18e+05, self-repaired-proportion=0.00215517, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.05,0.09,0.31,0.95,1.3 1.5,1.8,1.9,2.8), mean=0.508, stddev=0.498], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.09,0.11 0.15,0.21,0.41,0.72,0.83 0.88,0.90,0.92,0.95), mean=0.457, stddev=0.25], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.002 0.003,0.003,0.003,0.003), mean=0.00171, stddev=0.000406], oderiv-count=286720
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.02747, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.99,1.0,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.2,1.2,1.2), mean=1.08, stddev=0.0434], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.69,0.70 0.71,0.72,0.75,0.80,0.82 0.84,0.86,0.87,0.91), mean=0.76, stddev=0.0441], bias-{mean,stddev}=0.01777,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.17e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.04,0.06 0.08,0.14,0.43,0.98,1.3 1.6,2.0,2.1,3.1), mean=0.584, stddev=0.518], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.10,0.13 0.16,0.23,0.42,0.65,0.76 0.81,0.87,0.90,0.93), mean=0.445, stddev=0.219], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.004,0.004,0.004,0.005), mean=0.00232, stddev=0.000594], oderiv-count=133120
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.0276, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.99,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.2,1.2,1.2,1.2), mean=1.08, stddev=0.0481], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.69,0.70 0.71,0.72,0.76,0.80,0.83 0.85,0.87,0.88,0.93), mean=0.763, stddev=0.0456], bias-{mean,stddev}=0.007478,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.76e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.03,0.05 0.08,0.13,0.42,0.91,1.3 1.5,1.9,2.0,2.5), mean=0.553, stddev=0.487], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.09,0.12 0.15,0.22,0.42,0.63,0.74 0.80,0.86,0.89,0.91), mean=0.431, stddev=0.215], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.004,0.004,0.005,0.006), mean=0.0026, stddev=0.000631], oderiv-count=112896
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.02778, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.99,1.0,1.0 1.0,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.2), mean=1.09, stddev=0.0483], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.69,0.69,0.70 0.71,0.73,0.76,0.81,0.83 0.85,0.88,0.89,0.98), mean=0.768, stddev=0.0468], bias-{mean,stddev}=0.02204,1.014, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.37e+04, self-repaired-proportion=0.000191483, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.06 0.09,0.16,0.42,0.96,1.3 1.5,1.8,2.0,2.5), mean=0.563, stddev=0.469], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.10,0.13 0.17,0.24,0.43,0.64,0.75 0.79,0.85,0.89,0.93), mean=0.446, stddev=0.209], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.004,0.005,0.005), mean=0.0029, stddev=0.000607], oderiv-count=92160
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.028, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1,1.2 1.2,1.2,1.2,1.2), mean=1.1, stddev=0.0471], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.69,0.71 0.72,0.73,0.77,0.82,0.84 0.85,0.87,0.88,0.92), mean=0.775, stddev=0.0459], bias-{mean,stddev}=0.0458,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.84e+04, self-repaired-proportion=6.85307e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.05,0.07 0.11,0.18,0.42,0.87,1.2 1.5,1.9,2.1,2.6), mean=0.554, stddev=0.46], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.11,0.14 0.19,0.25,0.43,0.63,0.74 0.80,0.86,0.88,0.92), mean=0.445, stddev=0.201], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.003,0.003 0.003,0.003,0.003,0.004,0.004 0.005,0.005,0.005,0.007), mean=0.00349, stddev=0.000647], oderiv-count=94976
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.02823, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1,1.2 1.2,1.2,1.2,1.3), mean=1.11, stddev=0.0496], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.69,0.70,0.71 0.72,0.74,0.78,0.82,0.84 0.86,0.88,0.89,0.97), mean=0.781, stddev=0.0465], bias-{mean,stddev}=0.01655,0.9737, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.38e+04, self-repaired-proportion=0.00264246, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.04,0.05,0.08 0.12,0.17,0.41,0.87,1.2 1.5,1.9,2.1,3.9), mean=0.553, stddev=0.467], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.08,0.12,0.16 0.21,0.26,0.42,0.63,0.74 0.80,0.85,0.90,1.0), mean=0.447, stddev=0.196], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.003,0.004,0.004,0.005 0.005,0.005,0.005,0.006), mean=0.00366, stddev=0.000624], oderiv-count=70656
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.02841, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,1.0,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.2), mean=1.11, stddev=0.0577], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.70,0.70,0.71 0.72,0.74,0.78,0.83,0.85 0.87,0.88,0.89,0.94), mean=0.786, stddev=0.0474], bias-{mean,stddev}=-0.05804,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.22e+04, self-repaired-proportion=0.00714558, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.02,0.03,0.05 0.08,0.15,0.37,0.92,1.2 1.6,1.9,2.2,2.8), mean=0.55, stddev=0.506], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.06,0.07,0.11 0.15,0.23,0.41,0.63,0.74 0.83,0.89,0.92,0.97), mean=0.433, stddev=0.221], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.005 0.005,0.006,0.006,0.007), mean=0.00407, stddev=0.000759], oderiv-count=61440
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.02861, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.99,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.12, stddev=0.0621], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.74,0.79,0.84,0.86 0.88,0.90,0.91,0.96), mean=0.791, stddev=0.0548], bias-{mean,stddev}=-0.05934,0.998, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.28e+04, self-repaired-proportion=0.0202546, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.002,0.02,0.05 0.08,0.15,0.40,0.85,1.2 1.4,1.8,2.0,2.5), mean=0.53, stddev=0.453], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.06,0.10 0.16,0.24,0.43,0.62,0.73 0.80,0.86,0.90,0.98), mean=0.434, stddev=0.212], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.004,0.004,0.005,0.006,0.006 0.006,0.007,0.007,0.008), mean=0.00481, stddev=0.000894], oderiv-count=56320
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.02858, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.99,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.12, stddev=0.063], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.69,0.69,0.71 0.72,0.74,0.79,0.84,0.86 0.88,0.89,0.91,0.94), mean=0.79, stddev=0.0529], bias-{mean,stddev}=0.02919,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.92e+04, self-repaired-proportion=0.0273438, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.002,0.01,0.04 0.07,0.15,0.40,0.89,1.2 1.5,1.9,2.3,2.7), mean=0.549, stddev=0.494], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.04,0.08 0.13,0.23,0.43,0.64,0.76 0.83,0.90,0.92,1.0), mean=0.44, stddev=0.227], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.004,0.004,0.006,0.007,0.007 0.007,0.008,0.008,0.008), mean=0.00554, stddev=0.00107], oderiv-count=39168
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.02866, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.97,0.98,1.0 1.0,1.0,1.1,1.2,1.2 1.2,1.2,1.3,1.3), mean=1.12, stddev=0.0736], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.74,0.79,0.84,0.86 0.88,0.90,0.91,0.95), mean=0.792, stddev=0.0539], bias-{mean,stddev}=0.03176,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.74e+04, self-repaired-proportion=0.0724826, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,6e-05,0.0007,0.01 0.03,0.09,0.39,0.93,1.3 1.7,2.0,2.5,3.5), mean=0.557, stddev=0.552], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0005,0.004,0.03 0.09,0.18,0.43,0.66,0.78 0.87,0.93,0.95,1.0), mean=0.429, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.005,0.005,0.007,0.008,0.009 0.009,0.01,0.01,0.01), mean=0.00696, stddev=0.00145], oderiv-count=28160
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.02894, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,1.0 1.0,1.0,1.1,1.2,1.2 1.3,1.3,1.3,1.3), mean=1.13, stddev=0.0849], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.69,0.70 0.71,0.73,0.80,0.86,0.89 0.91,0.93,0.94,0.98), mean=0.799, stddev=0.0666], bias-{mean,stddev}=-0.06728,0.9591, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.45e+03, self-repaired-proportion=0.100063, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,9e-05,0.002 0.02,0.08,0.34,0.79,1.1 1.3,1.7,1.9,2.7), mean=0.469, stddev=0.451], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0005,0.007 0.05,0.15,0.39,0.60,0.69 0.76,0.85,0.89,0.99), mean=0.383, stddev=0.233], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.007,0.007 0.007,0.008,0.01,0.01,0.01 0.01,0.01,0.02,0.02), mean=0.0105, stddev=0.00236], oderiv-count=13312
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.0388, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.96,0.96,0.97 0.99,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.3), mean=1.07, stddev=0.0689], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.99,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.3), mean=1.07, stddev=0.0613], bias-{mean,stddev}=0.0008188,1.006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.35e+03, self-repaired-proportion=0.129427, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,8e-05,0.0007 0.006,0.05,0.36,0.78,0.98 1.1,1.3,1.4,1.8), mean=0.431, stddev=0.382], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0005,0.004 0.03,0.11,0.40,0.65,0.74 0.79,0.82,0.84,0.91), mean=0.396, stddev=0.255], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-08,5e-06,5e-05,0.0002 0.0007,0.003,0.01,0.01,0.02 0.02,0.02,0.02,0.03), mean=0.00917, stddev=0.00554], oderiv-count=5120
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=168, learning-rate=0.000762678, max-change=1.5, linear-params-rms=0.04804, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.87,1.0 1.1,1.2,1.3,1.5,1.6 1.6,1.7,1.7,1.9), mean=1.31, stddev=0.224], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-07,0.0003,0.002,0.007 0.03,0.13,0.62,0.84,0.90 0.97,1.0,1.1,1.2), mean=0.526, stddev=0.333], bias-{mean,stddev}=2.154e-07,0.003896, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=168, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.01,0.02 0.03,0.04,0.05,0.06,0.08 0.09,0.12,0.15,0.26), mean=0.053, stddev=0.0309], oderiv-count=5632
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000762678, max-change=0.75, linear-params-rms=0.03655, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.95,0.95,0.96 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0301], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.95,0.97 0.98,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0285], bias-{mean,stddev}=-0.07013,1.031, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.63e+03, self-repaired-proportion=0.170067, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,5e-06,0.0006 0.007,0.03,0.29,0.65,0.84 1.0,1.2,1.3,1.6), mean=0.358, stddev=0.335], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0002,0.003 0.03,0.08,0.44,0.72,0.81 0.88,0.91,0.94,0.98), mean=0.423, stddev=0.293], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-09,1e-08,1e-05,9e-05 0.0004,0.001,0.006,0.008,0.009 0.009,0.01,0.01,0.01), mean=0.00497, stddev=0.0031], oderiv-count=6400
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=184, learning-rate=0.000762678, max-change=1.5, linear-params-rms=0.02562, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,1.1,1.2 1.3,1.4,1.4,1.5), mean=0.493, stddev=0.51], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,5e-07,0.0007,0.005 0.02,0.06,0.33,0.47,0.51 0.54,0.57,0.59,0.67), mean=0.293, stddev=0.186], bias-{mean,stddev}=-5.39e-07,0.002168, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=184, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.02 0.03,0.04,0.05,0.05), mean=0.00806, stddev=0.0123], oderiv-count=7424
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/47.raw MTL/exp/nnet3/multitask/48.raw 
LOG (nnet3-show-progress[5.4.224~1-d4d9]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.611088 tdnn2.affine:0.431603 tdnn3.affine:0.581662 tdnn4.affine:0.626451 tdnn5.affine:0.663388 tdnn6.affine:0.702792 tdnn7.affine:0.735291 tdnn8.affine:0.765467 tdnn9.affine:0.79811 tdnn10.affine:0.799234 tdnn11.affine:0.796543 tdnnFINAL.affine:0.817098 prefinal-affine-task-0.affine:0.482276 output-0.affine:0.426626 prefinal-affine-task-1.affine:0.26913 output-1.affine:0.203612 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:43.4238 tdnn2.affine:41.2127 tdnn3.affine:40.8809 tdnn4.affine:40.8917 tdnn5.affine:41.243 tdnn6.affine:41.303 tdnn7.affine:40.8448 tdnn8.affine:42.6878 tdnn9.affine:41.6315 tdnn10.affine:42.1245 tdnn11.affine:42.0338 tdnnFINAL.affine:41.2086 prefinal-affine-task-0.affine:40.8087 output-0.affine:17.256 prefinal-affine-task-1.affine:40.1018 output-1.affine:9.63064 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0140804 tdnn2.affine:0.0104744 tdnn3.affine:0.0142316 tdnn4.affine:0.0153233 tdnn5.affine:0.0160893 tdnn6.affine:0.0170208 tdnn7.affine:0.0180078 tdnn8.affine:0.0179376 tdnn9.affine:0.0191783 tdnn10.affine:0.0189805 tdnn11.affine:0.0189575 tdnnFINAL.affine:0.0198356 prefinal-affine-task-0.affine:0.0118194 output-0.affine:0.0248154 prefinal-affine-task-1.affine:0.00671157 output-1.affine:0.0212829 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Sat Jul 28 03:15:10 UTC 2018, elapsed time 0 seconds

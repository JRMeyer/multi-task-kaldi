# nnet3-info MTL/exp/nnet3/multitask/3.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/2.raw MTL/exp/nnet3/multitask/3.raw 
# Started at Sat Jul 28 03:08:02 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/3.raw 
num-parameters: 13897312
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=168
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=168 output-dim=168
output-node name=output-0 input=output-0.log-softmax dim=168 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=184
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=184 output-dim=184
output-node name=output-1 input=output-1.log-softmax dim=184 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.1237, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.80,0.82,0.85 0.88,0.92,0.99,1.1,1.1 1.1,1.2,1.2,1.3), mean=0.994, stddev=0.0867], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.0,3.0,3.0,3.2 3.3,3.4,3.4,3.5,3.6 3.6,3.6,3.7,3.7), mean=3.43, stddev=0.124], bias-{mean,stddev}=0.02943,1.026, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.54e+05, self-repaired-proportion=0.108073, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.02,0.02 0.02,0.03,0.15,1.1,1.8 2.4,2.9,3.5,6.1), mean=0.56, stddev=0.834], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.06,0.08,0.24,0.80,0.91 0.94,0.96,0.98,1.0), mean=0.386, stddev=0.324], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0006,0.0007,0.0007 0.0007,0.0008,0.0009,0.001,0.001 0.001,0.002,0.002,0.002), mean=0.000972, stddev=0.000233], oderiv-count=281600
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.03631, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.95,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0265], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.94,0.96,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0262], bias-{mean,stddev}=0.01174,1.052, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.05e+05, self-repaired-proportion=0.171981, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0002,0.002,0.008 0.02,0.04,0.25,0.83,1.3 1.8,2.1,2.4,3.8), mean=0.482, stddev=0.575], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.001,0.01,0.03 0.07,0.14,0.45,0.82,0.93 0.96,0.99,1.0,1.0), mean=0.477, stddev=0.316], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0007,0.0008,0.0008 0.0009,0.0009,0.001,0.001,0.002 0.002,0.002,0.002,0.002), mean=0.00116, stddev=0.000285], oderiv-count=261120
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.02571, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.96,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=1.01, stddev=0.0192], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.68 0.69,0.70,0.71,0.73,0.73 0.74,0.75,0.76,0.81), mean=0.712, stddev=0.0179], bias-{mean,stddev}=0.01787,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.91e+04, self-repaired-proportion=0.184933, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,4e-06,0.0003,0.005 0.01,0.04,0.24,0.95,1.6 2.0,2.7,3.0,5.9), mean=0.551, stddev=0.73], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,6e-05,0.003,0.03 0.06,0.11,0.40,0.80,0.90 0.96,0.98,1.0,1.0), mean=0.448, stddev=0.314], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0007,0.0008,0.0008 0.0009,0.001,0.001,0.002,0.002 0.002,0.003,0.003,0.004), mean=0.00131, stddev=0.00046], oderiv-count=145920
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.0257, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.0,1.0,1.1), mean=1.01, stddev=0.0196], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.66,0.66,0.68 0.69,0.70,0.71,0.73,0.73 0.74,0.75,0.76,0.81), mean=0.712, stddev=0.02], bias-{mean,stddev}=0.007579,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.52e+04, self-repaired-proportion=0.190864, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-06,6e-05,0.003 0.01,0.04,0.27,1.1,1.7 2.4,3.1,3.4,4.3), mean=0.601, stddev=0.801], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-05,0.0006,0.02 0.05,0.11,0.35,0.78,0.89 0.95,0.98,0.99,1.0), mean=0.433, stddev=0.317], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0008,0.0008,0.0009 0.0009,0.001,0.001,0.002,0.002 0.002,0.003,0.003,0.004), mean=0.00141, stddev=0.000515], oderiv-count=110592
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.02572, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.02], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.66,0.67,0.68 0.69,0.70,0.71,0.73,0.73 0.74,0.75,0.76,0.79), mean=0.712, stddev=0.0184], bias-{mean,stddev}=0.02211,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.37e+04, self-repaired-proportion=0.186615, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-05,0.0006,0.004 0.01,0.03,0.34,1.2,1.9 2.4,3.0,3.5,4.1), mean=0.668, stddev=0.822], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0003,0.003,0.02 0.05,0.10,0.34,0.77,0.88 0.95,0.97,0.98,1.0), mean=0.436, stddev=0.317], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.0005,0.0006,0.0006 0.0007,0.0007,0.0009,0.001,0.001 0.002,0.002,0.002,0.003), mean=0.000971, stddev=0.000327], oderiv-count=114688
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.02573, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=1.01, stddev=0.0192], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.66,0.67,0.68 0.69,0.70,0.71,0.73,0.74 0.74,0.75,0.76,0.80), mean=0.713, stddev=0.0189], bias-{mean,stddev}=0.04592,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.2e+04, self-repaired-proportion=0.152995, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,5e-05,0.002,0.006 0.02,0.05,0.35,1.1,1.8 2.4,3.1,3.3,4.4), mean=0.652, stddev=0.799], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0006,0.01,0.03 0.06,0.14,0.40,0.75,0.88 0.94,0.97,0.99,1.0), mean=0.444, stddev=0.3], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.0005,0.0005,0.0006 0.0006,0.0007,0.0008,0.001,0.001 0.002,0.002,0.002,0.002), mean=0.000927, stddev=0.000308], oderiv-count=84224
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.02576, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0199], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.66,0.67,0.68 0.69,0.70,0.71,0.73,0.74 0.75,0.76,0.76,0.83), mean=0.714, stddev=0.0197], bias-{mean,stddev}=0.01663,0.9739, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.3e+04, self-repaired-proportion=0.197443, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,6e-06,0.002 0.007,0.03,0.28,1.2,2.0 2.6,3.4,3.8,4.6), mean=0.673, stddev=0.89], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,8e-05,0.01 0.03,0.08,0.30,0.82,0.92 0.96,0.98,0.99,1.0), mean=0.429, stddev=0.344], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0006,0.0006,0.0006 0.0007,0.0007,0.0009,0.001,0.001 0.002,0.002,0.002,0.003), mean=0.000981, stddev=0.000302], oderiv-count=82944
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.02573, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.97,0.97,0.98 0.99,0.99,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=1.01, stddev=0.0189], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.68 0.69,0.70,0.71,0.73,0.74 0.74,0.75,0.76,0.79), mean=0.713, stddev=0.0181], bias-{mean,stddev}=-0.05799,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.22e+04, self-repaired-proportion=0.271741, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0001 0.003,0.02,0.22,1.2,2.0 2.6,3.4,3.8,5.8), mean=0.653, stddev=0.934], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.001 0.02,0.05,0.28,0.83,0.93 0.97,0.99,0.99,1.0), mean=0.406, stddev=0.353], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0008,0.0008,0.0009 0.0009,0.001,0.001,0.002,0.002 0.002,0.002,0.003,0.003), mean=0.00133, stddev=0.000375], oderiv-count=57600
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.02573, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.96,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0203], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.67,0.68 0.69,0.70,0.71,0.73,0.74 0.74,0.76,0.76,0.79), mean=0.713, stddev=0.0193], bias-{mean,stddev}=-0.05927,0.9982, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.28e+04, self-repaired-proportion=0.24274, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,3e-05 0.002,0.01,0.24,1.2,2.0 2.6,3.4,3.7,4.3), mean=0.656, stddev=0.901], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0004 0.01,0.06,0.32,0.83,0.92 0.96,0.99,0.99,1.0), mean=0.42, stddev=0.347], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0009,0.0009,0.001 0.001,0.001,0.001,0.002,0.002 0.002,0.002,0.003,0.003), mean=0.00143, stddev=0.000379], oderiv-count=53248
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.02571, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.97 0.98,0.99,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=1.01, stddev=0.0199], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.66,0.67,0.68 0.69,0.70,0.71,0.73,0.74 0.74,0.75,0.76,0.79), mean=0.712, stddev=0.0193], bias-{mean,stddev}=0.02928,1.028, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.53e+04, self-repaired-proportion=0.250539, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,6e-05 0.002,0.02,0.23,1.3,2.2 3.0,3.5,3.9,6.6), mean=0.721, stddev=1], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0007 0.01,0.06,0.33,0.87,0.95 0.98,1.0,1.0,1.0), mean=0.434, stddev=0.355], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.002 0.002,0.003,0.003,0.004), mean=0.00166, stddev=0.00041], oderiv-count=33792
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.02577, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.97 0.98,0.99,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=1.01, stddev=0.021], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.66,0.67,0.68 0.69,0.70,0.71,0.73,0.74 0.75,0.76,0.76,0.80), mean=0.714, stddev=0.0195], bias-{mean,stddev}=0.03184,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.89e+04, self-repaired-proportion=0.364543, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 2e-05,0.003,0.18,1.5,2.3 3.2,3.9,4.4,6.4), mean=0.759, stddev=1.1], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0002,0.02,0.26,0.92,0.97 0.99,1.0,1.0,1.0), mean=0.425, stddev=0.39], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.005,0.005,0.006), mean=0.00297, stddev=0.000644], oderiv-count=25600
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.02577, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.98 0.98,0.99,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0208], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.66,0.66,0.68 0.69,0.70,0.71,0.73,0.74 0.75,0.76,0.76,0.78), mean=0.714, stddev=0.0203], bias-{mean,stddev}=-0.06712,0.9594, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.45e+03, self-repaired-proportion=0.434635, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.001,0.13,1.7,2.4 3.0,3.6,4.1,6.6), mean=0.758, stddev=1.1], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.009,0.24,0.93,0.98 0.99,1.0,1.0,1.0), mean=0.416, stddev=0.405], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.004,0.005,0.006,0.008,0.009 0.009,0.01,0.01,0.01), mean=0.0063, stddev=0.00161], oderiv-count=14080
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.0363, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0279], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0269], bias-{mean,stddev}=0.001381,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.1e+03, self-repaired-proportion=0.581462, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.0003,0.11,1.5,2.4 2.9,3.4,3.8,5.2), mean=0.741, stddev=1.02], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.003,0.27,0.99,1.0 1.0,1.0,1.0,1.0), mean=0.457, stddev=0.439], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,3e-08,3e-08,3e-08 5e-08,0.0003,0.01,0.01,0.02 0.02,0.02,0.03,0.04), mean=0.00887, stddev=0.00713], oderiv-count=6656
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=168, learning-rate=0.00145744, max-change=1.5, linear-params-rms=0.01558, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.13,0.15,0.19 0.24,0.32,0.41,0.48,0.53 0.59,0.69,0.87,1.1), mean=0.41, stddev=0.135], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-07,6e-07,6e-07,7e-07 1e-06,0.007,0.18,0.28,0.31 0.35,0.37,0.40,0.56), mean=0.157, stddev=0.127], bias-{mean,stddev}=2.139e-07,0.00249, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=168, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.01,0.02 0.03,0.03,0.05,0.06,0.08 0.10,0.13,0.15,0.27), mean=0.0533, stddev=0.0311], oderiv-count=6912
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00145744, max-change=0.75, linear-params-rms=0.03606, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=0.999, stddev=0.0253], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.0,1.1,1.1), mean=0.999, stddev=0.0251], bias-{mean,stddev}=-0.06968,1.032, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.58e+03, self-repaired-proportion=0.552156, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,4e-05,0.12,1.1,1.7 2.2,2.6,2.9,4.2), mean=0.525, stddev=0.754], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.0006,0.35,0.98,1.0 1.0,1.0,1.0,1.0), mean=0.46, stddev=0.425], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-09,5e-09,5e-09,6e-09 8e-09,2e-05,0.002,0.003,0.003 0.004,0.004,0.005,0.006), mean=0.00165, stddev=0.00138], oderiv-count=5888
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=184, learning-rate=0.00145744, max-change=1.5, linear-params-rms=0.006886, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.07,0.07,0.07,0.26,0.32 0.36,0.42,0.58,0.65), mean=0.148, stddev=0.121], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,2e-07,2e-07,3e-07 4e-07,0.001,0.07,0.13,0.15 0.18,0.19,0.21,0.25), mean=0.0707, stddev=0.061], bias-{mean,stddev}=-4.329e-07,0.001582, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=184, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.04,0.05,0.06), mean=0.00814, stddev=0.0123], oderiv-count=6144
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/2.raw MTL/exp/nnet3/multitask/3.raw 
LOG (nnet3-show-progress[5.4.224~1-d4d9]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.56441 tdnn2.affine:1.48724 tdnn3.affine:1.6034 tdnn4.affine:1.58861 tdnn5.affine:1.67622 tdnn6.affine:1.75308 tdnn7.affine:1.73395 tdnn8.affine:1.6126 tdnn9.affine:1.57712 tdnn10.affine:1.60951 tdnn11.affine:1.93206 tdnnFINAL.affine:2.38363 prefinal-affine-task-0.affine:2.18051 output-0.affine:2.89611 prefinal-affine-task-1.affine:0.831908 output-1.affine:1.32379 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:39.6519 tdnn2.affine:40.338 tdnn3.affine:39.5122 tdnn4.affine:39.4135 tdnn5.affine:39.6379 tdnn6.affine:39.5193 tdnn7.affine:38.8755 tdnn8.affine:40.6379 tdnn9.affine:39.3563 tdnn10.affine:39.8947 tdnn11.affine:39.7689 tdnnFINAL.affine:38.6521 prefinal-affine-task-0.affine:39.44 output-0.affine:5.59574 prefinal-affine-task-1.affine:39.8523 output-1.affine:2.58866 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0395588 tdnn2.affine:0.0368935 tdnn3.affine:0.0406159 tdnn4.affine:0.0403484 tdnn5.affine:0.0423474 tdnn6.affine:0.0444315 tdnn7.affine:0.0446774 tdnn8.affine:0.0397328 tdnn9.affine:0.0401241 tdnn10.affine:0.0403924 tdnn11.affine:0.0486494 tdnnFINAL.affine:0.0617819 prefinal-affine-task-0.affine:0.0553472 output-0.affine:0.613034 prefinal-affine-task-1.affine:0.0208798 output-1.affine:0.588656 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Sat Jul 28 03:08:02 UTC 2018, elapsed time 0 seconds

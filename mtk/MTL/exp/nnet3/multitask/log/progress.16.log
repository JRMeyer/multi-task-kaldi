# nnet3-info MTL/exp/nnet3/multitask/16.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/15.raw MTL/exp/nnet3/multitask/16.raw 
# Started at Sat Jul 28 03:09:35 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/16.raw 
num-parameters: 13897312
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=168
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=168 output-dim=168
output-node name=output-0 input=output-0.log-softmax dim=168 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=184
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=184 output-dim=184
output-node name=output-1 input=output-1.log-softmax dim=184 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.1362, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.83,0.86,0.89 0.93,0.97,1.1,1.2,1.3 1.3,1.4,1.5,1.6), mean=1.09, stddev=0.136], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.2,3.2,3.3,3.5 3.6,3.6,3.8,3.9,4.0 4.0,4.1,4.1,4.3), mean=3.77, stddev=0.183], bias-{mean,stddev}=0.02938,1.03, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.33e+05, self-repaired-proportion=0.0541131, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.02,0.02 0.03,0.06,0.35,1.3,1.8 2.1,2.5,3.0,5.4), mean=0.683, stddev=0.768], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.07,0.12,0.42,0.86,0.92 0.94,0.95,0.95,0.95), mean=0.471, stddev=0.325], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.004,0.004,0.004), mean=0.00219, stddev=0.000569], oderiv-count=286720
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.0371, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.96,0.96,0.97 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.03, stddev=0.0332], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.03, stddev=0.0365], bias-{mean,stddev}=0.01174,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.48e+05, self-repaired-proportion=0.0245284, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.01,0.01,0.02 0.04,0.07,0.28,0.83,1.2 1.4,1.6,1.8,2.6), mean=0.461, stddev=0.468], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.08 0.11,0.18,0.43,0.75,0.86 0.91,0.93,0.94,0.96), mean=0.46, stddev=0.272], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.005,0.005,0.005), mean=0.00301, stddev=0.000629], oderiv-count=240640
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.02647, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.99,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0284], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.68,0.69 0.70,0.71,0.73,0.76,0.77 0.78,0.79,0.80,0.85), mean=0.733, stddev=0.0272], bias-{mean,stddev}=0.01781,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=9.22e+04, self-repaired-proportion=0.0111607, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.04 0.05,0.10,0.35,0.93,1.2 1.5,1.9,2.0,3.0), mean=0.528, stddev=0.503], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.08,0.10 0.14,0.21,0.42,0.71,0.82 0.86,0.91,0.93,0.98), mean=0.456, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.006 0.006,0.007,0.007,0.008), mean=0.00419, stddev=0.00108], oderiv-count=133120
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.02649, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0309], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.71,0.73,0.76,0.77 0.78,0.80,0.81,0.85), mean=0.734, stddev=0.0292], bias-{mean,stddev}=0.007527,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.29e+04, self-repaired-proportion=0.0078545, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.02,0.02,0.03 0.05,0.10,0.37,0.90,1.3 1.6,2.0,2.1,2.5), mean=0.523, stddev=0.507], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.06,0.07,0.09 0.13,0.19,0.42,0.70,0.80 0.86,0.91,0.92,0.95), mean=0.442, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.006 0.006,0.007,0.008,0.01), mean=0.00429, stddev=0.00107], oderiv-count=117504
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.02653, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.98,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.0306], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.69 0.70,0.71,0.73,0.76,0.77 0.79,0.80,0.81,0.86), mean=0.735, stddev=0.0286], bias-{mean,stddev}=0.02208,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.55e+04, self-repaired-proportion=0.0086219, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.02,0.02,0.04 0.06,0.12,0.37,0.93,1.3 1.6,1.8,2.2,2.7), mean=0.539, stddev=0.501], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.06,0.07,0.10 0.14,0.21,0.45,0.69,0.79 0.86,0.90,0.92,0.95), mean=0.455, stddev=0.239], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.004,0.004,0.005,0.006 0.006,0.007,0.007,0.008), mean=0.00444, stddev=0.000958], oderiv-count=81920
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.02659, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0289], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.68,0.68,0.69 0.70,0.71,0.73,0.76,0.77 0.79,0.80,0.81,0.83), mean=0.736, stddev=0.028], bias-{mean,stddev}=0.04586,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.27e+04, self-repaired-proportion=0.00276693, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.03,0.04 0.07,0.13,0.37,0.90,1.3 1.6,2.0,2.2,2.9), mean=0.54, stddev=0.505], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.08,0.11 0.15,0.21,0.44,0.69,0.79 0.85,0.90,0.93,0.95), mean=0.457, stddev=0.235], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.004,0.004,0.005,0.006,0.007 0.007,0.008,0.008,0.009), mean=0.00527, stddev=0.00103], oderiv-count=89600
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.02666, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0305], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.68,0.68,0.69 0.70,0.72,0.74,0.76,0.77 0.79,0.80,0.81,0.86), mean=0.738, stddev=0.0281], bias-{mean,stddev}=0.01661,0.9737, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.53e+04, self-repaired-proportion=0.0078125, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.02,0.03,0.04 0.08,0.13,0.38,0.90,1.3 1.6,1.9,2.1,4.4), mean=0.544, stddev=0.51], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.07,0.09,0.12 0.16,0.24,0.43,0.67,0.80 0.85,0.90,0.93,1.0), mean=0.46, stddev=0.229], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.005,0.005,0.006,0.007,0.007 0.008,0.008,0.009,0.01), mean=0.00588, stddev=0.00111], oderiv-count=82944
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.02671, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.98,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.05, stddev=0.0323], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.70 0.71,0.71,0.74,0.76,0.78 0.79,0.80,0.81,0.84), mean=0.74, stddev=0.0278], bias-{mean,stddev}=-0.05798,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.71e+04, self-repaired-proportion=0.0265191, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.007,0.01,0.03 0.05,0.11,0.35,0.92,1.3 1.7,2.0,2.3,3.3), mean=0.544, stddev=0.553], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.02,0.05,0.08 0.11,0.21,0.41,0.68,0.81 0.87,0.92,0.94,1.0), mean=0.443, stddev=0.25], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.005,0.005,0.006,0.007,0.008 0.008,0.009,0.009,0.01), mean=0.00615, stddev=0.00125], oderiv-count=62720
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.0268, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.05, stddev=0.0347], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.68,0.69 0.70,0.71,0.74,0.77,0.78 0.80,0.81,0.82,0.86), mean=0.742, stddev=0.0316], bias-{mean,stddev}=-0.05928,0.9981, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.97e+04, self-repaired-proportion=0.0349042, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,4e-05,0.003,0.03 0.05,0.10,0.38,0.89,1.2 1.6,1.9,2.1,2.7), mean=0.526, stddev=0.5], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0005,0.02,0.08 0.12,0.21,0.45,0.68,0.80 0.87,0.91,0.93,1.0), mean=0.448, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.005,0.006 0.006,0.006,0.007,0.009,0.01 0.01,0.01,0.01,0.01), mean=0.00766, stddev=0.00152], oderiv-count=56320
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.0268, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.98,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.05, stddev=0.0357], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.68,0.69 0.70,0.72,0.74,0.77,0.78 0.79,0.80,0.81,0.87), mean=0.742, stddev=0.0306], bias-{mean,stddev}=0.02925,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.92e+04, self-repaired-proportion=0.053315, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0002,0.001,0.02 0.04,0.10,0.37,0.95,1.3 1.6,2.0,2.4,2.9), mean=0.545, stddev=0.538], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.001,0.007,0.06 0.10,0.20,0.45,0.70,0.82 0.87,0.92,0.94,1.0), mean=0.452, stddev=0.258], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.006,0.006,0.006 0.007,0.007,0.008,0.01,0.01 0.01,0.01,0.01,0.01), mean=0.00867, stddev=0.00171], oderiv-count=38400
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.02692, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.99 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.05, stddev=0.0416], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.70 0.71,0.72,0.74,0.77,0.79 0.80,0.82,0.82,0.86), mean=0.745, stddev=0.0322], bias-{mean,stddev}=0.03181,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.59e+04, self-repaired-proportion=0.116893, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-06,6e-05,0.002 0.02,0.06,0.37,1.0,1.4 1.8,2.1,2.5,3.9), mean=0.57, stddev=0.608], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,6e-05,0.0004,0.008 0.06,0.14,0.44,0.72,0.84 0.90,0.95,0.97,1.0), mean=0.442, stddev=0.283], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.008,0.008,0.008 0.009,0.009,0.01,0.01,0.01 0.02,0.02,0.02,0.02), mean=0.0115, stddev=0.00233], oderiv-count=28160
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.02717, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.98,0.99 1.0,1.0,1.1,1.1,1.1 1.1,1.2,1.2,1.2), mean=1.06, stddev=0.0487], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.70,0.72,0.75,0.79,0.81 0.82,0.83,0.84,0.89), mean=0.752, stddev=0.04], bias-{mean,stddev}=-0.0672,0.9592, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.96e+03, self-repaired-proportion=0.140097, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0002 0.005,0.04,0.32,0.93,1.3 1.5,2.0,2.4,3.1), mean=0.518, stddev=0.547], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.002 0.02,0.11,0.40,0.68,0.78 0.84,0.90,0.94,0.99), mean=0.406, stddev=0.272], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.01,0.02,0.02,0.02 0.03,0.03,0.03,0.03), mean=0.018, stddev=0.00434], oderiv-count=13056
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.03762, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.2,1.2), mean=1.04, stddev=0.0464], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.96,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.0433], bias-{mean,stddev}=0.001169,1.006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.35e+03, self-repaired-proportion=0.218006, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,6e-05 0.001,0.03,0.34,1.0,1.4 1.8,2.1,2.3,3.5), mean=0.559, stddev=0.61], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0005 0.007,0.09,0.42,0.79,0.91 0.96,0.98,0.99,1.0), mean=0.442, stddev=0.323], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,3e-08,4e-08,8e-05 0.0005,0.004,0.02,0.03,0.03 0.03,0.04,0.04,0.05), mean=0.0172, stddev=0.0113], oderiv-count=7168
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=168, learning-rate=0.00120876, max-change=1.5, linear-params-rms=0.03605, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.65,0.76 0.83,0.88,0.99,1.1,1.1 1.2,1.4,1.4,1.4), mean=0.985, stddev=0.168], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-07,7e-07,1e-06,0.002 0.01,0.08,0.46,0.63,0.70 0.74,0.78,0.84,0.99), mean=0.388, stddev=0.261], bias-{mean,stddev}=2.143e-07,0.003727, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=168, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.01,0.02 0.03,0.04,0.05,0.06,0.08 0.09,0.13,0.14,0.25), mean=0.0536, stddev=0.03], oderiv-count=6144
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00120876, max-change=0.75, linear-params-rms=0.03623, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.95,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0262], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.026], bias-{mean,stddev}=-0.0698,1.032, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.86e+03, self-repaired-proportion=0.285503, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0001 0.001,0.01,0.26,0.88,1.2 1.5,1.9,2.3,2.7), mean=0.466, stddev=0.532], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.001 0.007,0.05,0.45,0.82,0.93 0.98,0.99,1.0,1.0), mean=0.455, stddev=0.342], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-09,5e-09,6e-09,2e-05 8e-05,0.0006,0.004,0.006,0.007 0.007,0.008,0.008,0.009), mean=0.00382, stddev=0.00261], oderiv-count=6400
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=184, learning-rate=0.00120876, max-change=1.5, linear-params-rms=0.01636, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,0.71,0.75 0.79,0.82,0.90,0.91), mean=0.33, stddev=0.311], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,3e-07,4e-07,0.0008 0.004,0.02,0.20,0.31,0.34 0.36,0.38,0.40,0.46), mean=0.182, stddev=0.127], bias-{mean,stddev}=-5.012e-07,0.002083, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=184, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.04,0.05,0.05), mean=0.00807, stddev=0.0122], oderiv-count=5888
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/15.raw MTL/exp/nnet3/multitask/16.raw 
LOG (nnet3-show-progress[5.4.224~1-d4d9]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.51848 tdnn2.affine:1.43425 tdnn3.affine:1.73174 tdnn4.affine:1.64317 tdnn5.affine:1.61097 tdnn6.affine:1.63705 tdnn7.affine:1.699 tdnn8.affine:1.76449 tdnn9.affine:1.86493 tdnn10.affine:1.87452 tdnn11.affine:1.92076 tdnnFINAL.affine:2.10117 prefinal-affine-task-0.affine:1.40095 output-0.affine:1.6054 prefinal-affine-task-1.affine:0.372879 output-1.affine:0.536851 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:41.7424 tdnn2.affine:40.7474 tdnn3.affine:40.0958 tdnn4.affine:40.0196 tdnn5.affine:40.2611 tdnn6.affine:40.1876 tdnn7.affine:39.5855 tdnn8.affine:41.372 tdnn9.affine:40.1853 tdnn10.affine:40.7262 tdnn11.affine:40.6605 tdnnFINAL.affine:39.7573 prefinal-affine-task-0.affine:40.1543 output-0.affine:12.95 prefinal-affine-task-1.affine:39.9411 output-1.affine:6.15072 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0365152 tdnn2.affine:0.0352247 tdnn3.affine:0.0432487 tdnn4.affine:0.0411243 tdnn5.affine:0.0400853 tdnn6.affine:0.040818 tdnn7.affine:0.0430199 tdnn8.affine:0.0427486 tdnn9.affine:0.0465261 tdnn10.affine:0.0461357 tdnn11.affine:0.0473464 tdnnFINAL.affine:0.0529867 prefinal-affine-task-0.affine:0.034939 output-0.affine:0.127382 prefinal-affine-task-1.affine:0.00933694 output-1.affine:0.0899778 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Sat Jul 28 03:09:36 UTC 2018, elapsed time 1 seconds

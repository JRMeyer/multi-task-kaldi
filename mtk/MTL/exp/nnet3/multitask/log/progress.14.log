# nnet3-info MTL/exp/nnet3/multitask/14.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/13.raw MTL/exp/nnet3/multitask/14.raw 
# Started at Sat Jul 28 03:09:19 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/14.raw 
num-parameters: 13897312
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=168
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=168 output-dim=168
output-node name=output-0 input=output-0.log-softmax dim=168 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=184
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=184 output-dim=184
output-node name=output-1 input=output-1.log-softmax dim=184 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.1342, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.83,0.86,0.89 0.92,0.97,1.1,1.2,1.2 1.3,1.4,1.4,1.5), mean=1.07, stddev=0.127], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.2,3.2,3.3,3.4 3.5,3.6,3.7,3.8,3.9 4.0,4.0,4.0,4.2), mean=3.71, stddev=0.175], bias-{mean,stddev}=0.02942,1.03, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.59e+05, self-repaired-proportion=0.0366297, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.02 0.03,0.05,0.31,1.3,1.7 2.1,2.5,2.9,5.1), mean=0.655, stddev=0.749], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.06 0.08,0.12,0.39,0.86,0.92 0.94,0.95,0.95,0.96), mean=0.465, stddev=0.326], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.004,0.004,0.005), mean=0.00227, stddev=0.000585], oderiv-count=256000
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.03698, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.96,0.97 0.98,1.0,1.0,1.0,1.1 1.1,1.1,1.1,1.2), mean=1.02, stddev=0.0319], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,0.99,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.02, stddev=0.0347], bias-{mean,stddev}=0.01174,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.54e+05, self-repaired-proportion=0.0275065, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.01,0.01,0.02 0.03,0.06,0.28,0.83,1.2 1.4,1.6,1.8,2.9), mean=0.457, stddev=0.468], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.05,0.06,0.08 0.11,0.18,0.44,0.76,0.87 0.91,0.93,0.94,0.95), mean=0.465, stddev=0.275], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.005,0.005,0.005), mean=0.00293, stddev=0.000624], oderiv-count=256000
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.02633, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.03, stddev=0.0262], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.68,0.69 0.70,0.71,0.73,0.75,0.76 0.77,0.78,0.79,0.84), mean=0.729, stddev=0.0249], bias-{mean,stddev}=0.01782,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=9.22e+04, self-repaired-proportion=0.0119586, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.02,0.03 0.05,0.09,0.33,0.93,1.3 1.5,1.9,2.1,3.0), mean=0.52, stddev=0.513], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.07,0.10 0.13,0.19,0.43,0.72,0.83 0.88,0.92,0.93,0.98), mean=0.455, stddev=0.255], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.003,0.005,0.005 0.006,0.006,0.007,0.008), mean=0.00375, stddev=0.00102], oderiv-count=125440
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.02633, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.03, stddev=0.0282], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.66,0.68,0.69 0.70,0.71,0.73,0.75,0.76 0.78,0.79,0.80,0.85), mean=0.729, stddev=0.0269], bias-{mean,stddev}=0.007539,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.99e+04, self-repaired-proportion=0.00814732, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.02,0.02,0.03 0.05,0.08,0.35,0.90,1.3 1.6,2.0,2.1,2.5), mean=0.524, stddev=0.52], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.06,0.07,0.09 0.11,0.18,0.44,0.71,0.82 0.88,0.91,0.93,0.95), mean=0.445, stddev=0.254], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.003,0.003 0.003,0.003,0.003,0.004,0.005 0.006,0.006,0.007,0.009), mean=0.00367, stddev=0.000979], oderiv-count=122112
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.02634, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.03, stddev=0.028], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.69 0.70,0.71,0.73,0.75,0.76 0.78,0.79,0.80,0.84), mean=0.73, stddev=0.0259], bias-{mean,stddev}=0.02209,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.76e+04, self-repaired-proportion=0.0120251, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.02,0.02,0.03 0.05,0.10,0.36,0.96,1.3 1.6,1.9,2.1,2.6), mean=0.543, stddev=0.521], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.06,0.07,0.09 0.12,0.20,0.45,0.71,0.81 0.88,0.91,0.93,0.96), mean=0.458, stddev=0.253], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.006 0.006,0.007,0.007,0.008), mean=0.00411, stddev=0.000957], oderiv-count=112640
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.02638, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.03, stddev=0.0262], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.70,0.71,0.73,0.75,0.76 0.77,0.79,0.80,0.82), mean=0.731, stddev=0.0253], bias-{mean,stddev}=0.04587,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.09e+04, self-repaired-proportion=0.0062128, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.03,0.04 0.06,0.12,0.37,0.91,1.3 1.6,2.0,2.2,3.0), mean=0.541, stddev=0.518], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.11 0.15,0.21,0.44,0.71,0.80 0.87,0.92,0.93,0.95), mean=0.46, stddev=0.242], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.005 0.006,0.006,0.007,0.008), mean=0.00407, stddev=0.000856], oderiv-count=89600
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.02644, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0278], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.70,0.71,0.73,0.75,0.76 0.78,0.79,0.79,0.84), mean=0.732, stddev=0.0255], bias-{mean,stddev}=0.01662,0.9737, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.53e+04, self-repaired-proportion=0.010072, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.02,0.03,0.04 0.07,0.12,0.38,0.92,1.3 1.6,1.9,2.2,4.5), mean=0.548, stddev=0.526], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.06,0.08,0.11 0.16,0.23,0.44,0.70,0.81 0.86,0.90,0.94,1.0), mean=0.464, stddev=0.236], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.004 0.004,0.004,0.005,0.006,0.006 0.007,0.007,0.008,0.008), mean=0.00493, stddev=0.000999], oderiv-count=72192
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.02646, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.98,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0287], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.70 0.70,0.71,0.73,0.75,0.77 0.78,0.79,0.79,0.83), mean=0.733, stddev=0.0249], bias-{mean,stddev}=-0.05798,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.48e+04, self-repaired-proportion=0.032631, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.003,0.01,0.02 0.04,0.10,0.34,0.93,1.4 1.7,2.1,2.4,3.3), mean=0.548, stddev=0.567], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.05,0.08 0.11,0.19,0.41,0.69,0.82 0.88,0.93,0.95,1.0), mean=0.445, stddev=0.256], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.004,0.004,0.005,0.006,0.007 0.008,0.008,0.009,0.01), mean=0.00537, stddev=0.00114], oderiv-count=75520
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.02654, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0308], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.68,0.69 0.70,0.71,0.73,0.76,0.77 0.78,0.80,0.81,0.84), mean=0.735, stddev=0.0282], bias-{mean,stddev}=-0.05927,0.9981, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.38e+04, self-repaired-proportion=0.0393663, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,7e-05,0.002,0.02 0.04,0.09,0.38,0.93,1.3 1.6,2.0,2.2,2.7), mean=0.533, stddev=0.516], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0004,0.01,0.07 0.11,0.20,0.45,0.67,0.80 0.88,0.92,0.93,1.0), mean=0.45, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.005,0.005,0.007,0.008,0.009 0.009,0.01,0.01,0.01), mean=0.00674, stddev=0.00136], oderiv-count=49152
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.02655, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.98,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.0318], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.67,0.68,0.69 0.70,0.71,0.73,0.76,0.77 0.78,0.79,0.80,0.86), mean=0.735, stddev=0.0276], bias-{mean,stddev}=0.02926,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2e+04, self-repaired-proportion=0.0615925, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0001,0.001,0.01 0.03,0.09,0.38,0.94,1.3 1.7,2.1,2.5,3.0), mean=0.553, stddev=0.559], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.001,0.007,0.05 0.09,0.20,0.46,0.71,0.83 0.89,0.93,0.95,1.0), mean=0.455, stddev=0.265], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.005,0.006 0.006,0.006,0.007,0.009,0.009 0.01,0.01,0.01,0.01), mean=0.00745, stddev=0.00146], oderiv-count=37632
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.02668, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.98 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.037], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.69 0.70,0.71,0.74,0.76,0.78 0.79,0.80,0.81,0.85), mean=0.739, stddev=0.0291], bias-{mean,stddev}=0.03183,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.74e+04, self-repaired-proportion=0.132453, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,2e-05,0.0009 0.01,0.06,0.36,1.0,1.5 1.8,2.2,2.5,4.0), mean=0.582, stddev=0.629], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0001,0.007 0.05,0.14,0.43,0.74,0.85 0.91,0.95,0.98,1.0), mean=0.444, stddev=0.289], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.007,0.007 0.007,0.008,0.009,0.01,0.01 0.01,0.01,0.01,0.02), mean=0.00947, stddev=0.00189], oderiv-count=23040
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.0269, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.99 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.05, stddev=0.0431], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.70,0.71,0.74,0.78,0.79 0.81,0.82,0.83,0.86), mean=0.745, stddev=0.0358], bias-{mean,stddev}=-0.06718,0.9592, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.94e+03, self-repaired-proportion=0.15178, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0001 0.003,0.04,0.32,0.99,1.4 1.7,2.1,2.6,3.4), mean=0.539, stddev=0.587], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0008 0.02,0.10,0.40,0.70,0.80 0.86,0.92,0.96,0.99), mean=0.411, stddev=0.281], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.01,0.01 0.01,0.01,0.02,0.02,0.02 0.02,0.02,0.02,0.03), mean=0.0157, stddev=0.00377], oderiv-count=13568
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.03741, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.0429], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.96,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.0402], bias-{mean,stddev}=0.00122,1.006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.1e+03, self-repaired-proportion=0.257682, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,1e-05 0.001,0.02,0.33,1.1,1.5 2.0,2.3,2.5,3.9), mean=0.587, stddev=0.667], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0002 0.007,0.08,0.42,0.82,0.94 0.98,0.99,1.0,1.0), mean=0.447, stddev=0.335], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,3e-08,4e-08,3e-05 0.0004,0.003,0.02,0.03,0.03 0.03,0.03,0.04,0.05), mean=0.0166, stddev=0.0111], oderiv-count=6400
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=168, learning-rate=0.00124406, max-change=1.5, linear-params-rms=0.03398, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.62,0.71 0.78,0.83,0.93,1.0,1.1 1.2,1.2,1.3,1.3), mean=0.929, stddev=0.157], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-07,7e-07,8e-07,0.0008 0.01,0.07,0.43,0.59,0.66 0.70,0.74,0.79,0.96), mean=0.364, stddev=0.248], bias-{mean,stddev}=2.142e-07,0.003634, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=168, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.01,0.02 0.03,0.04,0.05,0.07,0.08 0.09,0.14,0.15,0.27), mean=0.0533, stddev=0.0312], oderiv-count=7424
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00124406, max-change=0.75, linear-params-rms=0.03621, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0259], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0258], bias-{mean,stddev}=-0.06977,1.032, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.33e+03, self-repaired-proportion=0.305881, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,3e-05 0.0006,0.01,0.26,0.89,1.3 1.6,2.0,2.3,2.9), mean=0.474, stddev=0.557], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0003 0.004,0.05,0.45,0.83,0.95 0.99,1.0,1.0,1.0), mean=0.455, stddev=0.349], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-09,5e-09,6e-09,8e-06 6e-05,0.0004,0.004,0.006,0.006 0.007,0.007,0.008,0.009), mean=0.00353, stddev=0.00246], oderiv-count=7168
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=184, learning-rate=0.00124406, max-change=1.5, linear-params-rms=0.01537, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,0.66,0.71 0.74,0.79,0.87,0.88), mean=0.311, stddev=0.291], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,3e-07,4e-07,0.0004 0.002,0.02,0.19,0.29,0.32 0.34,0.36,0.38,0.44), mean=0.17, stddev=0.121], bias-{mean,stddev}=-4.91e-07,0.002069, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=184, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.04,0.05,0.06), mean=0.00807, stddev=0.0123], oderiv-count=7680
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/13.raw MTL/exp/nnet3/multitask/14.raw 
LOG (nnet3-show-progress[5.4.224~1-d4d9]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.47527 tdnn2.affine:1.41311 tdnn3.affine:1.66192 tdnn4.affine:1.53194 tdnn5.affine:1.46865 tdnn6.affine:1.46839 tdnn7.affine:1.49286 tdnn8.affine:1.54215 tdnn9.affine:1.63569 tdnn10.affine:1.66105 tdnn11.affine:1.74143 tdnnFINAL.affine:1.96855 prefinal-affine-task-0.affine:1.35095 output-0.affine:1.67964 prefinal-affine-task-1.affine:0.356502 output-1.affine:0.556581 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:41.4051 tdnn2.affine:40.6807 tdnn3.affine:39.984 tdnn4.affine:39.8929 tdnn5.affine:40.1184 tdnn6.affine:40.0256 tdnn7.affine:39.4061 tdnn8.affine:41.1862 tdnn9.affine:39.9818 tdnn10.affine:40.5329 tdnn11.affine:40.471 tdnnFINAL.affine:39.5455 prefinal-affine-task-0.affine:40.039 output-0.affine:12.2066 prefinal-affine-task-1.affine:39.9299 output-1.affine:5.77703 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0357779 tdnn2.affine:0.0347628 tdnn3.affine:0.0416181 tdnn4.affine:0.0384595 tdnn5.affine:0.0366675 tdnn6.affine:0.0367536 tdnn7.affine:0.0379616 tdnn8.affine:0.0375224 tdnn9.affine:0.0410112 tdnn10.affine:0.0410767 tdnn11.affine:0.0431301 tdnnFINAL.affine:0.0499125 prefinal-affine-task-0.affine:0.033791 output-0.affine:0.142198 prefinal-affine-task-1.affine:0.00892949 output-1.affine:0.0997214 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Sat Jul 28 03:09:20 UTC 2018, elapsed time 1 seconds

# nnet3-info MTL/exp/nnet3/multitask/14.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/13.raw MTL/exp/nnet3/multitask/14.raw 
# Started at Fri Jul 27 01:11:42 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/14.raw 
num-parameters: 13891160
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=152
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=152 output-dim=152
output-node name=output-0 input=output-0.log-softmax dim=152 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=192
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=192 output-dim=192
output-node name=output-1 input=output-1.log-softmax dim=192 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.1347, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.76,0.82,0.85,0.89 0.92,0.96,1.1,1.2,1.2 1.3,1.4,1.4,1.5), mean=1.08, stddev=0.127], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.1,3.1,3.3,3.4 3.5,3.6,3.7,3.9,3.9 4.0,4.1,4.1,4.3), mean=3.73, stddev=0.186], bias-{mean,stddev}=0.03045,1.029, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.89e+05, self-repaired-proportion=0.0391245, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.02,0.02 0.03,0.05,0.24,1.4,1.8 2.1,2.5,2.8,4.3), mean=0.666, stddev=0.766], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.07,0.10,0.35,0.88,0.93 0.94,0.95,0.95,0.96), mean=0.457, stddev=0.342], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.004 0.004,0.004,0.005,0.005), mean=0.00267, stddev=0.000678], oderiv-count=302080
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.037, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.96,0.97 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0313], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.02, stddev=0.0345], bias-{mean,stddev}=0.01176,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.74e+05, self-repaired-proportion=0.0334066, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.01,0.01,0.02 0.03,0.06,0.29,0.85,1.2 1.4,1.7,1.8,2.4), mean=0.468, stddev=0.473], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.05,0.06,0.07 0.10,0.16,0.46,0.79,0.88 0.92,0.94,0.95,0.96), mean=0.475, stddev=0.289], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.003,0.003,0.004,0.004 0.005,0.005,0.005,0.006), mean=0.00343, stddev=0.000668], oderiv-count=281600
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.02639, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.03, stddev=0.0285], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.71,0.73,0.75,0.77 0.78,0.79,0.80,0.84), mean=0.731, stddev=0.0263], bias-{mean,stddev}=0.01781,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.02e+05, self-repaired-proportion=0.021668, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.01,0.02,0.02 0.04,0.08,0.32,0.93,1.4 1.7,2.0,2.1,2.6), mean=0.525, stddev=0.541], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.05,0.06,0.08 0.11,0.17,0.41,0.72,0.85 0.89,0.93,0.94,0.96), mean=0.447, stddev=0.264], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.006 0.006,0.007,0.007,0.009), mean=0.00433, stddev=0.000983], oderiv-count=143360
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.02645, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.0298], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.67,0.68,0.69 0.70,0.71,0.73,0.76,0.77 0.78,0.80,0.80,0.88), mean=0.732, stddev=0.0293], bias-{mean,stddev}=0.007463,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=9.91e+04, self-repaired-proportion=0.0129847, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.01,0.02,0.02 0.04,0.08,0.28,0.85,1.3 1.6,1.9,2.1,2.7), mean=0.485, stddev=0.514], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.06,0.06,0.08 0.11,0.18,0.39,0.69,0.80 0.86,0.92,0.94,0.97), mean=0.422, stddev=0.25], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.004,0.004,0.005,0.006,0.007 0.007,0.008,0.008,0.009), mean=0.00515, stddev=0.00106], oderiv-count=138240
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.02653, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0309], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.71,0.73,0.76,0.78 0.79,0.80,0.81,0.85), mean=0.735, stddev=0.0297], bias-{mean,stddev}=0.02203,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.78e+04, self-repaired-proportion=0.00966283, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.01,0.02,0.03 0.05,0.10,0.34,0.83,1.2 1.5,1.8,1.9,2.3), mean=0.5, stddev=0.47], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.05,0.06,0.10 0.13,0.20,0.42,0.67,0.79 0.85,0.90,0.92,0.95), mean=0.44, stddev=0.238], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.005,0.005,0.006,0.007,0.007 0.008,0.008,0.008,0.009), mean=0.00574, stddev=0.000999], oderiv-count=126976
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.0266, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.03], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.67,0.68,0.69 0.70,0.71,0.73,0.76,0.77 0.79,0.80,0.81,0.84), mean=0.736, stddev=0.0284], bias-{mean,stddev}=0.04586,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.81e+04, self-repaired-proportion=0.0138465, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.02,0.02,0.03 0.05,0.10,0.36,0.89,1.2 1.5,1.8,1.9,2.8), mean=0.516, stddev=0.481], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.06,0.06,0.08 0.12,0.19,0.44,0.69,0.80 0.86,0.91,0.92,1.0), mean=0.449, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.005,0.005,0.006,0.007,0.007 0.008,0.008,0.008,0.009), mean=0.00605, stddev=0.000969], oderiv-count=94976
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.02674, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.05, stddev=0.033], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.68,0.68,0.70 0.70,0.71,0.74,0.77,0.78 0.79,0.80,0.81,0.86), mean=0.74, stddev=0.0306], bias-{mean,stddev}=0.01655,0.9738, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.99e+04, self-repaired-proportion=0.0249155, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.02,0.03 0.05,0.09,0.35,0.81,1.1 1.4,1.8,2.0,3.9), mean=0.487, stddev=0.475], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.05,0.06,0.08 0.12,0.20,0.42,0.67,0.76 0.86,0.92,0.95,0.98), mean=0.437, stddev=0.24], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.005,0.005 0.005,0.006,0.007,0.008,0.008 0.009,0.009,0.009,0.01), mean=0.00674, stddev=0.00105], oderiv-count=79872
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.0268, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.99,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.05, stddev=0.0341], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.68,0.69,0.70 0.70,0.71,0.74,0.77,0.78 0.79,0.81,0.82,0.87), mean=0.742, stddev=0.0311], bias-{mean,stddev}=-0.05803,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.86e+04, self-repaired-proportion=0.0466079, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0001,0.002,0.02 0.03,0.08,0.34,0.87,1.2 1.4,1.8,2.1,3.1), mean=0.495, stddev=0.484], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.001,0.009,0.05 0.10,0.17,0.43,0.69,0.80 0.86,0.92,0.94,0.98), mean=0.432, stddev=0.259], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.006,0.006,0.006 0.007,0.007,0.008,0.009,0.01 0.01,0.01,0.01,0.01), mean=0.00809, stddev=0.00125], oderiv-count=84480
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.0269, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.98,0.99 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.05, stddev=0.0369], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.68,0.69 0.70,0.71,0.74,0.78,0.79 0.80,0.81,0.82,0.85), mean=0.745, stddev=0.0332], bias-{mean,stddev}=-0.05934,0.9981, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.58e+04, self-repaired-proportion=0.0694568, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,5e-05,0.0007,0.01 0.03,0.08,0.34,0.84,1.1 1.4,1.7,1.9,2.6), mean=0.483, stddev=0.462], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0003,0.004,0.04 0.09,0.17,0.42,0.69,0.80 0.88,0.91,0.95,0.99), mean=0.431, stddev=0.258], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.007,0.008,0.008 0.008,0.008,0.01,0.01,0.01 0.01,0.01,0.01,0.01), mean=0.0101, stddev=0.00158], oderiv-count=56320
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.02691, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.98,0.99 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.05, stddev=0.0367], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.68,0.68,0.69 0.70,0.72,0.74,0.77,0.79 0.80,0.81,0.82,0.85), mean=0.745, stddev=0.0326], bias-{mean,stddev}=0.02922,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.23e+04, self-repaired-proportion=0.0820646, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-05,0.0005,0.007 0.03,0.08,0.34,0.88,1.2 1.5,1.8,2.0,2.5), mean=0.505, stddev=0.487], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0002,0.003,0.03 0.08,0.17,0.44,0.71,0.82 0.89,0.94,0.96,0.99), mean=0.443, stddev=0.27], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.009,0.009 0.009,0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0116, stddev=0.00189], oderiv-count=42240
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.02698, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.99 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.06, stddev=0.0406], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.69,0.70 0.70,0.72,0.75,0.78,0.79 0.80,0.81,0.82,0.86), mean=0.747, stddev=0.033], bias-{mean,stddev}=0.03178,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.89e+04, self-repaired-proportion=0.139165, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,8e-06,5e-05,0.001 0.01,0.06,0.32,0.88,1.2 1.6,1.9,2.1,2.7), mean=0.506, stddev=0.524], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,5e-05,0.0004,0.006 0.04,0.14,0.42,0.72,0.85 0.91,0.96,0.98,1.0), mean=0.432, stddev=0.285], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.01,0.01,0.02,0.02 0.02,0.02,0.02,0.02), mean=0.0141, stddev=0.00228], oderiv-count=26112
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.02709, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.99 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.2,1.2), mean=1.06, stddev=0.0452], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.67,0.68,0.69 0.70,0.71,0.75,0.78,0.80 0.81,0.83,0.84,0.86), mean=0.75, stddev=0.0378], bias-{mean,stddev}=-0.06725,0.9592, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.7e+03, self-repaired-proportion=0.135761, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,4e-05,0.0003 0.006,0.05,0.32,0.79,1.1 1.3,1.6,1.8,2.5), mean=0.44, stddev=0.435], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0003,0.002 0.02,0.11,0.40,0.65,0.75 0.81,0.89,0.93,0.99), mean=0.398, stddev=0.264], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.03,0.03 0.03,0.03,0.03,0.03), mean=0.0212, stddev=0.0045], oderiv-count=15360
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.03736, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.03, stddev=0.0404], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.96,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.03, stddev=0.0381], bias-{mean,stddev}=0.001049,1.006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.61e+03, self-repaired-proportion=0.174361, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0002 0.003,0.03,0.30,0.90,1.1 1.4,1.6,1.9,2.5), mean=0.465, stddev=0.479], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.001 0.01,0.08,0.42,0.74,0.85 0.90,0.94,0.96,0.98), mean=0.423, stddev=0.301], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,5e-08,3e-05,0.0003 0.001,0.004,0.02,0.03,0.03 0.03,0.04,0.04,0.04), mean=0.0193, stddev=0.0122], oderiv-count=7680
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=152, learning-rate=0.00103179, max-change=1.5, linear-params-rms=0.03544, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.26,0.67,0.73 0.80,0.85,0.98,1.1,1.1 1.2,1.2,1.3,1.4), mean=0.969, stddev=0.163], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-07,1e-06,0.0004,0.005 0.02,0.07,0.43,0.60,0.64 0.67,0.71,0.74,0.81), mean=0.366, stddev=0.239], bias-{mean,stddev}=-4.844e-08,0.003059, rank-in=20, rank-out=76, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=152, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.009,0.01,0.02 0.03,0.04,0.05,0.07,0.08 0.10,0.13,0.19,0.24), mean=0.0569, stddev=0.0311], oderiv-count=8448
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00103179, max-change=0.75, linear-params-rms=0.03611, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0255], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0253], bias-{mean,stddev}=-0.06986,1.031, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.1e+03, self-repaired-proportion=0.220145, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0001 0.003,0.02,0.29,0.79,1.1 1.3,1.5,1.7,2.3), mean=0.421, stddev=0.439], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0007 0.01,0.06,0.46,0.80,0.89 0.93,0.96,0.98,1.0), mean=0.45, stddev=0.331], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-09,8e-09,2e-06,2e-05 0.0001,0.0006,0.004,0.006,0.007 0.007,0.008,0.008,0.01), mean=0.00384, stddev=0.0026], oderiv-count=7168
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=192, learning-rate=0.00103179, max-change=1.5, linear-params-rms=0.01641, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,0.68,0.73 0.77,0.81,0.85,0.88), mean=0.34, stddev=0.302], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,4e-07,6e-05,0.001 0.005,0.03,0.21,0.31,0.35 0.36,0.39,0.40,0.44), mean=0.187, stddev=0.129], bias-{mean,stddev}=2.075e-08,0.001924, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=192, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.02 0.03,0.05,0.05,0.07), mean=0.00809, stddev=0.012], oderiv-count=7680
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/13.raw MTL/exp/nnet3/multitask/14.raw 
LOG (nnet3-show-progress[5.4.217~1-8ae5]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.42988 tdnn2.affine:1.24251 tdnn3.affine:1.60653 tdnn4.affine:1.6419 tdnn5.affine:1.6865 tdnn6.affine:1.75443 tdnn7.affine:1.87237 tdnn8.affine:1.97283 tdnn9.affine:2.07704 tdnn10.affine:2.1149 tdnn11.affine:2.13102 tdnnFINAL.affine:2.23294 prefinal-affine-task-0.affine:1.36928 output-0.affine:1.40871 prefinal-affine-task-1.affine:0.343914 output-1.affine:0.496256 ]
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:41.4678 tdnn2.affine:40.6959 tdnn3.affine:40.0353 tdnn4.affine:39.99 tdnn5.affine:40.2681 tdnn6.affine:40.1928 tdnn7.affine:39.6453 tdnn8.affine:41.449 tdnn9.affine:40.2691 tdnn10.affine:40.8151 tdnn11.affine:40.7037 tdnnFINAL.affine:39.6993 prefinal-affine-task-0.affine:40.0119 output-0.affine:12.1085 prefinal-affine-task-1.affine:39.8745 output-1.affine:6.302 ]
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0345808 tdnn2.affine:0.0305502 tdnn3.affine:0.0401723 tdnn4.affine:0.0411152 tdnn5.affine:0.0419528 tdnn6.affine:0.0437379 tdnn7.affine:0.0473405 tdnn8.affine:0.0477123 tdnn9.affine:0.0517222 tdnn10.affine:0.0519507 tdnn11.affine:0.0524804 tdnnFINAL.affine:0.0563824 prefinal-affine-task-0.affine:0.0342568 output-0.affine:0.119602 prefinal-affine-task-1.affine:0.00862469 output-1.affine:0.0808745 ]
# Accounting: time=3 threads=1
# Ended (code 0) at Fri Jul 27 01:11:45 UTC 2018, elapsed time 3 seconds

# nnet3-info MTL/exp/nnet3/multitask/53.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/52.raw MTL/exp/nnet3/multitask/53.raw 
# Started at Sat Jul 28 03:16:01 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/53.raw 
num-parameters: 13897312
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=168
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=168 output-dim=168
output-node name=output-0 input=output-0.log-softmax dim=168 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=184
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=184 output-dim=184
output-node name=output-1 input=output-1.log-softmax dim=184 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.1464, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.83,0.87,0.91 0.96,1.0,1.1,1.3,1.4 1.5,1.6,1.7,1.9), mean=1.17, stddev=0.179], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.6,3.6,3.7,3.7 3.8,3.9,4.0,4.2,4.3 4.4,4.5,4.6,4.7), mean=4.05, stddev=0.22], bias-{mean,stddev}=0.02854,1.034, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.54e+05, self-repaired-proportion=0.00570619, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.04,0.06,0.29,1.4,1.8 2.3,2.9,3.4,6.5), mean=0.703, stddev=0.817], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.07 0.08,0.13,0.41,0.86,0.91 0.93,0.94,0.95,0.95), mean=0.475, stddev=0.324], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0007,0.0007,0.0007 0.0008,0.0008,0.001,0.001,0.002 0.002,0.002,0.002,0.002), mean=0.00111, stddev=0.00034], oderiv-count=261120
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.03801, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.99 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.2,1.2), mean=1.05, stddev=0.0422], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.96,0.97,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.2,1.2,1.3), mean=1.05, stddev=0.0522], bias-{mean,stddev}=0.01179,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.69e+05, self-repaired-proportion=0.00372024, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.02,0.02,0.03 0.05,0.09,0.33,0.93,1.3 1.6,1.9,2.1,2.7), mean=0.525, stddev=0.524], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.08,0.10 0.14,0.21,0.42,0.73,0.84 0.88,0.91,0.93,0.95), mean=0.462, stddev=0.255], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.0009,0.0009,0.0009 0.001,0.001,0.001,0.002,0.002 0.002,0.002,0.002,0.002), mean=0.00131, stddev=0.000315], oderiv-count=296960
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02752, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.99,1.0,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.2,1.2,1.2), mean=1.08, stddev=0.0442], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.70 0.71,0.72,0.75,0.80,0.82 0.84,0.87,0.88,0.92), mean=0.761, stddev=0.0449], bias-{mean,stddev}=0.01777,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.94e+04, self-repaired-proportion=0.000595238, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.05 0.07,0.14,0.40,0.98,1.3 1.6,2.0,2.1,3.0), mean=0.572, stddev=0.512], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.10,0.13 0.16,0.22,0.42,0.66,0.75 0.82,0.87,0.89,0.95), mean=0.441, stddev=0.219], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.003 0.003,0.003,0.003,0.004), mean=0.00192, stddev=0.0005], oderiv-count=145920
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02764, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.99,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.2,1.2,1.2,1.2), mean=1.08, stddev=0.0488], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.69,0.70 0.71,0.72,0.76,0.80,0.83 0.85,0.87,0.88,0.94), mean=0.765, stddev=0.0462], bias-{mean,stddev}=0.007474,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.14e+04, self-repaired-proportion=0.001381, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.03,0.05 0.07,0.13,0.41,0.88,1.3 1.5,1.9,2.0,2.5), mean=0.552, stddev=0.492], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.08,0.11 0.15,0.22,0.41,0.64,0.74 0.81,0.86,0.90,0.92), mean=0.429, stddev=0.216], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.003,0.004,0.005), mean=0.00213, stddev=0.000519], oderiv-count=131328
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02782, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,1.0,1.0,1.0 1.0,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.2), mean=1.09, stddev=0.049], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.69,0.70,0.70 0.71,0.73,0.76,0.81,0.83 0.85,0.88,0.89,0.98), mean=0.77, stddev=0.0474], bias-{mean,stddev}=0.02204,1.014, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.96e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.06 0.09,0.16,0.42,0.94,1.2 1.5,1.8,2.0,2.7), mean=0.561, stddev=0.47], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.10,0.12 0.17,0.24,0.43,0.64,0.75 0.80,0.85,0.88,0.94), mean=0.445, stddev=0.209], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.003,0.004,0.004), mean=0.00237, stddev=0.000494], oderiv-count=102400
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02806, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1,1.2 1.2,1.2,1.2,1.2), mean=1.1, stddev=0.0478], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.69,0.71 0.72,0.73,0.77,0.82,0.84 0.85,0.87,0.88,0.92), mean=0.776, stddev=0.0465], bias-{mean,stddev}=0.0458,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.91e+04, self-repaired-proportion=0.000434028, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.05,0.07 0.11,0.18,0.41,0.86,1.2 1.5,1.9,2.1,2.7), mean=0.551, stddev=0.463], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.11,0.15 0.19,0.25,0.42,0.63,0.74 0.80,0.86,0.90,0.92), mean=0.443, stddev=0.201], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.003 0.004,0.004,0.004,0.006), mean=0.00278, stddev=0.00052], oderiv-count=96768
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02829, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.11, stddev=0.0503], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.69,0.70,0.71 0.72,0.74,0.78,0.82,0.84 0.86,0.88,0.89,0.97), mean=0.783, stddev=0.0471], bias-{mean,stddev}=0.01654,0.9737, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.53e+04, self-repaired-proportion=0.00285618, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.04,0.06,0.09 0.12,0.18,0.41,0.86,1.2 1.5,1.9,2.1,3.8), mean=0.551, stddev=0.463], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.08,0.12,0.17 0.20,0.27,0.42,0.62,0.73 0.80,0.86,0.90,1.0), mean=0.447, stddev=0.196], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.003,0.004 0.004,0.004,0.004,0.005), mean=0.00299, stddev=0.000517], oderiv-count=87552
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02848, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,1.0,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.2), mean=1.11, stddev=0.0588], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.70,0.70,0.72 0.73,0.74,0.78,0.83,0.85 0.87,0.89,0.89,0.94), mean=0.788, stddev=0.0481], bias-{mean,stddev}=-0.05804,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.5e+04, self-repaired-proportion=0.00537109, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.02,0.03,0.05 0.08,0.15,0.38,0.89,1.2 1.6,2.0,2.2,2.8), mean=0.549, stddev=0.504], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.06,0.07,0.11 0.15,0.23,0.41,0.63,0.73 0.83,0.89,0.92,0.97), mean=0.432, stddev=0.22], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.003,0.004,0.004 0.004,0.005,0.005,0.005), mean=0.00332, stddev=0.000608], oderiv-count=70400
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02868, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.99,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.12, stddev=0.0631], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.74,0.79,0.85,0.87 0.89,0.90,0.92,0.97), mean=0.793, stddev=0.0556], bias-{mean,stddev}=-0.05934,0.998, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.76e+04, self-repaired-proportion=0.0188802, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.003,0.02,0.05 0.08,0.16,0.41,0.85,1.1 1.5,1.8,2.0,2.5), mean=0.53, stddev=0.452], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.05,0.11 0.15,0.24,0.43,0.62,0.73 0.80,0.87,0.90,0.98), mean=0.433, stddev=0.212], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.005 0.005,0.005,0.006,0.007), mean=0.00396, stddev=0.000734], oderiv-count=46080
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02865, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.99,1.0,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.12, stddev=0.064], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.69,0.70,0.71 0.72,0.74,0.79,0.84,0.86 0.88,0.89,0.91,0.94), mean=0.792, stddev=0.0537], bias-{mean,stddev}=0.02918,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.46e+04, self-repaired-proportion=0.025726, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-06,0.003,0.01,0.04 0.07,0.16,0.40,0.89,1.3 1.5,1.9,2.2,2.7), mean=0.547, stddev=0.492], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.01,0.04,0.09 0.14,0.23,0.43,0.63,0.76 0.83,0.91,0.93,0.99), mean=0.439, stddev=0.226], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.004,0.005,0.005,0.006 0.006,0.006,0.007,0.007), mean=0.00462, stddev=0.000875], oderiv-count=39168
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02874, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.97,0.98,1.0 1.0,1.0,1.1,1.2,1.2 1.2,1.2,1.3,1.3), mean=1.12, stddev=0.0749], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.74,0.80,0.84,0.86 0.88,0.90,0.91,0.96), mean=0.794, stddev=0.0547], bias-{mean,stddev}=0.03176,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.89e+04, self-repaired-proportion=0.0753906, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0002,0.0008,0.01 0.04,0.10,0.39,0.91,1.3 1.7,2.0,2.4,3.5), mean=0.553, stddev=0.549], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0007,0.003,0.04 0.09,0.18,0.42,0.66,0.78 0.87,0.93,0.96,1.0), mean=0.428, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.004,0.004,0.006,0.007,0.007 0.007,0.008,0.008,0.009), mean=0.00559, stddev=0.00114], oderiv-count=25600
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.02901, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,1.0 1.0,1.0,1.1,1.2,1.2 1.3,1.3,1.3,1.3), mean=1.13, stddev=0.0862], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.69,0.70 0.71,0.73,0.80,0.87,0.89 0.91,0.93,0.94,0.98), mean=0.801, stddev=0.0673], bias-{mean,stddev}=-0.06729,0.9591, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.4e+03, self-repaired-proportion=0.0973116, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0001,0.002 0.02,0.08,0.33,0.78,1.0 1.3,1.7,1.9,2.7), mean=0.46, stddev=0.446], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0009,0.008 0.05,0.15,0.38,0.59,0.68 0.77,0.86,0.90,0.99), mean=0.38, stddev=0.232], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.006,0.006 0.006,0.006,0.008,0.01,0.01 0.01,0.01,0.01,0.01), mean=0.00822, stddev=0.00179], oderiv-count=13312
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.03883, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.96,0.96,0.97 0.99,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.3), mean=1.07, stddev=0.0697], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.99,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.3), mean=1.07, stddev=0.0617], bias-{mean,stddev}=0.0007928,1.006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.12e+03, self-repaired-proportion=0.13141, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-07,8e-05,0.0008 0.005,0.05,0.35,0.75,0.92 1.1,1.2,1.3,1.7), mean=0.415, stddev=0.36], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0002,0.0006,0.004 0.02,0.12,0.39,0.64,0.73 0.78,0.80,0.82,0.89), mean=0.389, stddev=0.248], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-08,5e-06,3e-05,0.0001 0.0006,0.002,0.009,0.01,0.01 0.01,0.01,0.02,0.02), mean=0.00738, stddev=0.00442], oderiv-count=7168
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=168, learning-rate=0.000709727, max-change=1.5, linear-params-rms=0.04874, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.88,1.0 1.1,1.2,1.3,1.5,1.6 1.6,1.7,1.7,1.9), mean=1.33, stddev=0.229], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-07,0.0004,0.002,0.008 0.03,0.14,0.63,0.85,0.91 0.98,1.0,1.1,1.2), mean=0.534, stddev=0.338], bias-{mean,stddev}=2.162e-07,0.003914, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=168, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.02,0.02 0.03,0.03,0.05,0.07,0.08 0.09,0.13,0.15,0.27), mean=0.0532, stddev=0.0313], oderiv-count=5376
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000709727, max-change=0.75, linear-params-rms=0.03657, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.95,0.95,0.96 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.2), mean=1.01, stddev=0.0305], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0287], bias-{mean,stddev}=-0.07017,1.031, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.07e+03, self-repaired-proportion=0.164885, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0005 0.007,0.03,0.28,0.62,0.80 0.94,1.1,1.2,1.5), mean=0.344, stddev=0.317], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.003 0.03,0.08,0.44,0.71,0.79 0.86,0.90,0.92,0.98), mean=0.417, stddev=0.288], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-09,1e-08,1e-05,9e-05 0.0003,0.001,0.005,0.007,0.008 0.008,0.009,0.009,0.01), mean=0.00463, stddev=0.00288], oderiv-count=5376
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=184, learning-rate=0.000709727, max-change=1.5, linear-params-rms=0.02636, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,1.1,1.3 1.3,1.4,1.5,1.5), mean=0.507, stddev=0.527], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,1e-06,0.0007,0.006 0.02,0.06,0.34,0.48,0.53 0.55,0.59,0.60,0.69), mean=0.302, stddev=0.191], bias-{mean,stddev}=-5.397e-07,0.00217, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=184, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.04,0.05,0.06), mean=0.00811, stddev=0.0123], oderiv-count=6656
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/52.raw MTL/exp/nnet3/multitask/53.raw 
LOG (nnet3-show-progress[5.4.224~1-d4d9]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.468603 tdnn2.affine:0.317813 tdnn3.affine:0.439473 tdnn4.affine:0.468498 tdnn5.affine:0.495777 tdnn6.affine:0.527956 tdnn7.affine:0.553364 tdnn8.affine:0.576891 tdnn9.affine:0.604324 tdnn10.affine:0.606921 tdnn11.affine:0.611241 tdnnFINAL.affine:0.629959 prefinal-affine-task-0.affine:0.354388 output-0.affine:0.310113 prefinal-affine-task-1.affine:0.231199 output-1.affine:0.160659 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:43.4872 tdnn2.affine:41.239 tdnn3.affine:40.9179 tdnn4.affine:40.9275 tdnn5.affine:41.2805 tdnn6.affine:41.3439 tdnn7.affine:40.8944 tdnn8.affine:42.7406 tdnn9.affine:41.6913 tdnn10.affine:42.1864 tdnn11.affine:42.0965 tdnnFINAL.affine:41.2672 prefinal-affine-task-0.affine:40.8237 output-0.affine:17.506 prefinal-affine-task-1.affine:40.1122 output-1.affine:9.91103 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0107777 tdnn2.affine:0.00770742 tdnn3.affine:0.0107419 tdnn4.affine:0.0114489 tdnn5.affine:0.0120116 tdnn6.affine:0.0127721 tdnn7.affine:0.0135348 tdnn8.affine:0.0135009 tdnn9.affine:0.0144991 tdnn10.affine:0.0143903 tdnn11.affine:0.0145237 tdnnFINAL.affine:0.0152694 prefinal-affine-task-0.affine:0.00868154 output-0.affine:0.0177641 prefinal-affine-task-1.affine:0.00576403 output-1.affine:0.0162899 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Sat Jul 28 03:16:02 UTC 2018, elapsed time 1 seconds

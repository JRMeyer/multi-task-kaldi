# nnet3-info MTL/exp/nnet3/multitask/7.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/6.raw MTL/exp/nnet3/multitask/7.raw 
# Started at Sat Jul 28 03:08:27 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/7.raw 
num-parameters: 13897312
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=168
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=168 output-dim=168
output-node name=output-0 input=output-0.log-softmax dim=168 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=184
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=184 output-dim=184
output-node name=output-1 input=output-1.log-softmax dim=184 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.1272, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.81,0.83,0.86 0.90,0.94,1.0,1.1,1.1 1.2,1.2,1.3,1.3), mean=1.02, stddev=0.0979], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.1,3.1,3.2,3.3 3.4,3.4,3.5,3.6,3.7 3.8,3.8,3.8,3.9), mean=3.52, stddev=0.147], bias-{mean,stddev}=0.02955,1.028, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.74e+05, self-repaired-proportion=0.0473452, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.02,0.02 0.02,0.04,0.17,1.0,1.4 1.8,2.2,2.5,4.1), mean=0.513, stddev=0.642], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.07,0.10,0.27,0.81,0.90 0.93,0.95,0.95,0.99), mean=0.411, stddev=0.323], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.003 0.003,0.003,0.003,0.004), mean=0.00182, stddev=0.000514], oderiv-count=266240
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.03658, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.95,0.97 0.98,0.99,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0285], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0296], bias-{mean,stddev}=0.01171,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.79e+05, self-repaired-proportion=0.0602431, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.009,0.01,0.02 0.03,0.07,0.25,0.78,1.1 1.4,1.6,1.8,2.5), mean=0.431, stddev=0.452], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.05,0.07 0.10,0.18,0.43,0.80,0.89 0.93,0.95,0.96,0.98), mean=0.473, stddev=0.286], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.002,0.002,0.002,0.003 0.003,0.003,0.003,0.004), mean=0.00192, stddev=0.000483], oderiv-count=271360
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.02592, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0214], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.82), mean=0.718, stddev=0.0196], bias-{mean,stddev}=0.01786,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=9.47e+04, self-repaired-proportion=0.0531092, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.01,0.01,0.02 0.03,0.07,0.30,0.87,1.3 1.7,2.0,2.2,3.9), mean=0.507, stddev=0.543], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.05,0.06,0.08 0.11,0.18,0.44,0.77,0.86 0.92,0.95,0.96,1.0), mean=0.469, stddev=0.276], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.002,0.002,0.002,0.003,0.004 0.004,0.005,0.005,0.006), mean=0.00236, stddev=0.000829], oderiv-count=128000
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.0259, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.96,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0221], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.66,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.78,0.82), mean=0.717, stddev=0.0218], bias-{mean,stddev}=0.007574,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.76e+04, self-repaired-proportion=0.0452665, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.01,0.02,0.02 0.04,0.06,0.31,0.93,1.4 1.7,2.0,2.3,2.9), mean=0.518, stddev=0.558], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.06,0.07,0.08 0.11,0.17,0.42,0.74,0.87 0.92,0.94,0.96,1.0), mean=0.456, stddev=0.275], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.003 0.003,0.004,0.004,0.006), mean=0.00197, stddev=0.000689], oderiv-count=112896
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.0259, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0224], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.79), mean=0.717, stddev=0.0202], bias-{mean,stddev}=0.02213,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.78e+04, self-repaired-proportion=0.0463927, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-06,0.004,0.01,0.02 0.03,0.08,0.35,0.98,1.5 1.8,2.1,2.4,2.9), mean=0.562, stddev=0.584], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.02,0.05,0.07 0.10,0.19,0.46,0.75,0.87 0.92,0.94,0.96,1.0), mean=0.471, stddev=0.274], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.003 0.003,0.004,0.004,0.005), mean=0.00202, stddev=0.000627], oderiv-count=98304
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.0259, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1.01, stddev=0.0209], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.67,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.81), mean=0.717, stddev=0.0203], bias-{mean,stddev}=0.04591,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.09e+04, self-repaired-proportion=0.0390242, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.007,0.01,0.02 0.04,0.09,0.34,0.94,1.4 1.7,2.2,2.4,3.9), mean=0.556, stddev=0.588], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.04,0.05,0.08 0.12,0.19,0.45,0.74,0.85 0.91,0.94,0.95,0.99), mean=0.466, stddev=0.266], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.002,0.002,0.002,0.003,0.003 0.003,0.004,0.004,0.006), mean=0.00218, stddev=0.000614], oderiv-count=102144
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.02593, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0219], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.83), mean=0.718, stddev=0.0208], bias-{mean,stddev}=0.01665,0.9738, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.45e+04, self-repaired-proportion=0.0359195, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.006,0.01,0.02 0.04,0.09,0.37,0.99,1.4 1.7,2.2,2.5,4.9), mean=0.572, stddev=0.606], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.03,0.05,0.08 0.12,0.20,0.44,0.75,0.84 0.91,0.95,0.96,1.0), mean=0.471, stddev=0.264], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.004,0.004,0.004), mean=0.00229, stddev=0.000593], oderiv-count=76800
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.0259, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.97,0.98,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.021], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.69 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.80), mean=0.718, stddev=0.0195], bias-{mean,stddev}=-0.05798,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.25e+04, self-repaired-proportion=0.0738118, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-05,0.002,0.009 0.02,0.06,0.32,0.98,1.5 1.9,2.3,2.7,3.6), mean=0.561, stddev=0.644], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0002,0.01,0.04 0.08,0.15,0.42,0.73,0.86 0.91,0.95,0.97,1.0), mean=0.445, stddev=0.282], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.005,0.005,0.006), mean=0.00268, stddev=0.000694], oderiv-count=70400
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.02592, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0224], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.81), mean=0.718, stddev=0.0212], bias-{mean,stddev}=-0.05926,0.9981, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.58e+04, self-repaired-proportion=0.0892361, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,2e-05,0.006 0.02,0.05,0.35,1.0,1.4 1.8,2.2,2.5,3.0), mean=0.552, stddev=0.595], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0003,0.03 0.08,0.14,0.45,0.73,0.86 0.92,0.95,0.97,1.0), mean=0.453, stddev=0.283], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.004 0.005,0.005,0.006,0.007), mean=0.00333, stddev=0.00081], oderiv-count=51200
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.02591, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0226], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.67,0.68 0.69,0.70,0.72,0.73,0.74 0.75,0.76,0.77,0.81), mean=0.718, stddev=0.0207], bias-{mean,stddev}=0.02928,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.53e+04, self-repaired-proportion=0.115926, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,7e-05,0.005 0.01,0.04,0.35,1.1,1.5 1.9,2.4,2.9,3.8), mean=0.579, stddev=0.653], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0006,0.03 0.06,0.14,0.46,0.76,0.86 0.92,0.97,0.98,1.0), mean=0.457, stddev=0.298], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.005 0.006,0.006,0.007,0.008), mean=0.004, stddev=0.000915], oderiv-count=38400
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.026, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.98 0.98,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0247], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.67,0.69 0.69,0.70,0.72,0.74,0.75 0.76,0.77,0.78,0.81), mean=0.72, stddev=0.0214], bias-{mean,stddev}=0.03185,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.43e+04, self-repaired-proportion=0.192301, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,5e-05 0.002,0.03,0.32,1.2,1.7 2.1,2.6,2.9,4.7), mean=0.623, stddev=0.739], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0004 0.01,0.09,0.43,0.79,0.91 0.94,0.97,1.0,1.0), mean=0.448, stddev=0.32], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.004,0.004,0.005,0.006,0.007 0.007,0.008,0.008,0.01), mean=0.00514, stddev=0.00109], oderiv-count=22016
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.02608, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.97,0.97,0.98 0.99,1.0,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0264], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.66,0.67,0.69 0.70,0.70,0.72,0.74,0.75 0.76,0.77,0.78,0.80), mean=0.722, stddev=0.0238], bias-{mean,stddev}=-0.06713,0.9593, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.08e+04, self-repaired-proportion=0.249746, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0004,0.01,0.26,1.2,1.7 2.1,2.7,3.2,4.8), mean=0.61, stddev=0.76], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.004,0.05,0.40,0.77,0.89 0.95,0.98,1.0,1.0), mean=0.419, stddev=0.327], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.006,0.006,0.007 0.007,0.007,0.009,0.01,0.01 0.01,0.01,0.02,0.02), mean=0.00938, stddev=0.00238], oderiv-count=12800
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.03663, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.2), mean=1.01, stddev=0.0316], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.1,1.1), mean=1.01, stddev=0.0302], bias-{mean,stddev}=0.001395,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.89e+03, self-repaired-proportion=0.398698, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.005,0.28,1.3,1.9 2.3,2.8,3.0,4.5), mean=0.653, stddev=0.814], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.03,0.41,0.92,0.99 1.0,1.0,1.0,1.0), mean=0.457, stddev=0.376], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,3e-08,3e-08,4e-08 3e-05,0.001,0.01,0.02,0.02 0.02,0.03,0.03,0.04), mean=0.0116, stddev=0.00847], oderiv-count=7168
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=168, learning-rate=0.00137591, max-change=1.5, linear-params-rms=0.02471, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.25,0.45 0.52,0.60,0.68,0.75,0.79 0.86,0.90,1.0,1.2), mean=0.671, stddev=0.137], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-07,6e-07,7e-07,8e-07 0.0006,0.03,0.30,0.44,0.50 0.52,0.57,0.59,0.82), mean=0.256, stddev=0.192], bias-{mean,stddev}=2.139e-07,0.003473, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=168, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.02,0.02 0.03,0.03,0.05,0.06,0.08 0.10,0.14,0.16,0.25), mean=0.0535, stddev=0.0302], oderiv-count=7936
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.00137591, max-change=0.75, linear-params-rms=0.03611, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0254], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0253], bias-{mean,stddev}=-0.06968,1.032, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.1e+03, self-repaired-proportion=0.402886, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.002,0.21,0.99,1.5 1.9,2.3,2.7,3.5), mean=0.506, stddev=0.656], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.01,0.43,0.86,0.98 1.0,1.0,1.0,1.0), mean=0.452, stddev=0.37], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-09,4e-09,5e-09,5e-09 1e-06,0.0001,0.002,0.004,0.004 0.005,0.005,0.005,0.006), mean=0.00222, stddev=0.00169], oderiv-count=6656
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=184, learning-rate=0.00137591, max-change=1.5, linear-params-rms=0.0108, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,0.46,0.50 0.54,0.58,0.72,0.73), mean=0.225, stddev=0.197], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,2e-07,3e-07,3e-07 9e-05,0.006,0.12,0.21,0.23 0.25,0.27,0.29,0.34), mean=0.115, stddev=0.0902], bias-{mean,stddev}=-4.674e-07,0.001859, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=184, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.04,0.05,0.06), mean=0.00804, stddev=0.0123], oderiv-count=5632
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/6.raw MTL/exp/nnet3/multitask/7.raw 
LOG (nnet3-show-progress[5.4.224~1-d4d9]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.50423 tdnn2.affine:1.22969 tdnn3.affine:1.37553 tdnn4.affine:1.15892 tdnn5.affine:1.00322 tdnn6.affine:0.953456 tdnn7.affine:0.929795 tdnn8.affine:0.95782 tdnn9.affine:1.01356 tdnn10.affine:1.05435 tdnn11.affine:1.16826 tdnnFINAL.affine:1.44594 prefinal-affine-task-0.affine:1.1256 output-0.affine:2.10008 prefinal-affine-task-1.affine:0.290446 output-1.affine:0.759361 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:40.2516 tdnn2.affine:40.474 tdnn3.affine:39.6658 tdnn4.affine:39.5593 tdnn5.affine:39.7756 tdnn6.affine:39.6521 tdnn7.affine:39.0039 tdnn8.affine:40.7648 tdnn9.affine:39.4996 tdnn10.affine:40.0424 tdnn11.affine:39.9443 tdnnFINAL.affine:38.89 prefinal-affine-task-0.affine:39.6187 output-0.affine:8.87416 prefinal-affine-task-1.affine:39.881 output-1.affine:4.05892 ]
LOG (nnet3-show-progress[5.4.224~1-d4d9]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0375295 tdnn2.affine:0.0304002 tdnn3.affine:0.0347077 tdnn4.affine:0.0293197 tdnn5.affine:0.025241 tdnn6.affine:0.0240633 tdnn7.affine:0.0238576 tdnn8.affine:0.0235149 tdnn9.affine:0.0256851 tdnn10.affine:0.0263582 tdnn11.affine:0.0292837 tdnnFINAL.affine:0.037248 prefinal-affine-task-0.affine:0.0284507 output-0.affine:0.256783 prefinal-affine-task-1.affine:0.00728408 output-1.affine:0.204016 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Sat Jul 28 03:08:27 UTC 2018, elapsed time 0 seconds

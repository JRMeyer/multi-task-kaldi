# nnet3-info MTL/exp/nnet3/multitask/20.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/19.raw MTL/exp/nnet3/multitask/20.raw 
# Started at Fri Jul 27 01:22:07 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/20.raw 
num-parameters: 13891160
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=152
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=152 output-dim=152
output-node name=output-0 input=output-0.log-softmax dim=152 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=192
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=192 output-dim=192
output-node name=output-1 input=output-1.log-softmax dim=192 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.1379, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.82,0.85,0.89 0.93,0.98,1.1,1.2,1.3 1.4,1.4,1.5,1.6), mean=1.1, stddev=0.142], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.1,3.1,3.4,3.5 3.6,3.6,3.8,4.0,4.0 4.1,4.2,4.2,4.5), mean=3.82, stddev=0.211], bias-{mean,stddev}=0.03039,1.03, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.05e+05, self-repaired-proportion=0.0403646, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.02 0.03,0.04,0.30,1.4,1.8 2.3,2.7,2.9,5.6), mean=0.693, stddev=0.813], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.07,0.10,0.37,0.88,0.92 0.94,0.95,0.95,0.96), mean=0.459, stddev=0.343], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.005,0.005,0.005), mean=0.00274, stddev=0.000747], oderiv-count=286720
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.03727, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.96,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.03, stddev=0.0343], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.96,0.96,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.03, stddev=0.039], bias-{mean,stddev}=0.01177,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.15e+05, self-repaired-proportion=0.0214316, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.02,0.02 0.04,0.06,0.28,0.90,1.2 1.5,1.8,1.9,2.5), mean=0.481, stddev=0.488], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.07,0.08 0.11,0.17,0.44,0.78,0.88 0.92,0.94,0.95,0.96), mean=0.469, stddev=0.283], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.003,0.004,0.005 0.005,0.005,0.006,0.006), mean=0.0036, stddev=0.00074], oderiv-count=286720
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02672, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.99 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.05, stddev=0.0339], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.68,0.69 0.70,0.71,0.74,0.77,0.78 0.80,0.81,0.82,0.88), mean=0.74, stddev=0.0323], bias-{mean,stddev}=0.0178,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.02e+05, self-repaired-proportion=0.0172033, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.01,0.02,0.03 0.04,0.09,0.33,0.97,1.4 1.7,2.0,2.1,2.5), mean=0.542, stddev=0.54], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.05,0.07,0.09 0.12,0.18,0.40,0.71,0.83 0.87,0.92,0.93,0.95), mean=0.445, stddev=0.256], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.004,0.004,0.005,0.006 0.006,0.007,0.007,0.008), mean=0.00451, stddev=0.00101], oderiv-count=145920
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02681, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.05, stddev=0.0361], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.67,0.68,0.69 0.70,0.71,0.74,0.77,0.79 0.81,0.82,0.84,0.89), mean=0.742, stddev=0.0358], bias-{mean,stddev}=0.007436,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.91e+04, self-repaired-proportion=0.0109883, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.02,0.02,0.03 0.04,0.10,0.30,0.85,1.2 1.5,2.0,2.1,2.7), mean=0.495, stddev=0.507], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.06,0.07,0.09 0.12,0.19,0.38,0.66,0.78 0.84,0.90,0.93,0.96), mean=0.418, stddev=0.239], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.004,0.004,0.005,0.006,0.007 0.008,0.008,0.009,0.009), mean=0.00539, stddev=0.00111], oderiv-count=133632
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02696, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.06, stddev=0.0374], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.69,0.69 0.70,0.71,0.74,0.78,0.80 0.82,0.84,0.85,0.89), mean=0.746, stddev=0.0373], bias-{mean,stddev}=0.02201,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.6e+04, self-repaired-proportion=0.0088848, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.01,0.02,0.04 0.06,0.12,0.36,0.84,1.2 1.5,1.7,2.0,2.3), mean=0.51, stddev=0.461], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.06,0.07,0.11 0.14,0.22,0.42,0.65,0.76 0.84,0.89,0.91,0.95), mean=0.438, stddev=0.225], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.005,0.005,0.006,0.007,0.008 0.008,0.008,0.009,0.009), mean=0.00613, stddev=0.00106], oderiv-count=120832
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02711, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.06, stddev=0.0382], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.67,0.69,0.70 0.71,0.72,0.75,0.78,0.80 0.81,0.83,0.84,0.89), mean=0.75, stddev=0.0357], bias-{mean,stddev}=0.04584,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.73e+04, self-repaired-proportion=0.00809403, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.02,0.02,0.04 0.06,0.11,0.39,0.86,1.2 1.5,1.8,1.9,2.6), mean=0.521, stddev=0.466], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.06,0.07,0.10 0.13,0.21,0.44,0.66,0.78 0.84,0.90,0.92,0.99), mean=0.444, stddev=0.234], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.005,0.005 0.005,0.006,0.007,0.008,0.008 0.009,0.009,0.009,0.01), mean=0.00682, stddev=0.00109], oderiv-count=94976
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02734, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.2,1.2), mean=1.07, stddev=0.042], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.68,0.69,0.70 0.71,0.72,0.75,0.79,0.81 0.82,0.84,0.84,0.90), mean=0.757, stddev=0.0392], bias-{mean,stddev}=0.01653,0.9738, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=6.91e+04, self-repaired-proportion=0.0119958, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.02,0.03,0.04 0.07,0.12,0.35,0.81,1.1 1.5,1.8,1.9,3.8), mean=0.495, stddev=0.459], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.05,0.07,0.10 0.15,0.22,0.41,0.64,0.74 0.84,0.90,0.94,0.97), mean=0.433, stddev=0.224], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.006,0.006,0.006 0.007,0.007,0.008,0.009,0.01 0.01,0.01,0.01,0.01), mean=0.00824, stddev=0.00128], oderiv-count=89088
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02746, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.2,1.2,1.2), mean=1.08, stddev=0.0452], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.69,0.69,0.70 0.71,0.72,0.76,0.80,0.81 0.83,0.84,0.86,0.90), mean=0.76, stddev=0.0399], bias-{mean,stddev}=-0.05805,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.25e+04, self-repaired-proportion=0.0367345, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0004,0.004,0.02 0.04,0.10,0.36,0.83,1.2 1.4,1.7,2.0,2.8), mean=0.5, stddev=0.464], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.002,0.01,0.06 0.10,0.19,0.43,0.67,0.78 0.83,0.90,0.91,0.97), mean=0.43, stddev=0.244], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.007,0.007 0.007,0.008,0.009,0.01,0.01 0.01,0.01,0.01,0.01), mean=0.00897, stddev=0.00144], oderiv-count=81920
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02757, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.2,1.2,1.2,1.2), mean=1.08, stddev=0.0485], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.69,0.70 0.71,0.72,0.76,0.80,0.82 0.83,0.85,0.85,0.88), mean=0.763, stddev=0.0427], bias-{mean,stddev}=-0.05936,0.9981, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.89e+04, self-repaired-proportion=0.0560924, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0001,0.002,0.01 0.04,0.10,0.36,0.82,1.1 1.4,1.7,1.9,2.5), mean=0.488, stddev=0.448], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0007,0.009,0.05 0.11,0.19,0.42,0.66,0.77 0.85,0.89,0.94,0.98), mean=0.427, stddev=0.243], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.007,0.007,0.008 0.008,0.009,0.01,0.01,0.01 0.01,0.01,0.01,0.01), mean=0.0104, stddev=0.00173], oderiv-count=60416
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02754, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.2,1.2,1.2,1.2), mean=1.08, stddev=0.0479], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.68,0.69,0.70 0.71,0.72,0.76,0.80,0.82 0.83,0.84,0.85,0.89), mean=0.762, stddev=0.0412], bias-{mean,stddev}=0.0292,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.92e+04, self-repaired-proportion=0.0715803, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-05,0.0009,0.009 0.04,0.09,0.36,0.89,1.2 1.5,1.8,2.0,2.5), mean=0.508, stddev=0.478], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0002,0.004,0.03 0.10,0.19,0.43,0.69,0.80 0.87,0.93,0.96,0.98), mean=0.437, stddev=0.257], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.008,0.008,0.008 0.009,0.009,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0115, stddev=0.00204], oderiv-count=43776
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02754, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.99 1.0,1.0,1.1,1.1,1.1 1.2,1.2,1.2,1.2), mean=1.08, stddev=0.0518], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.69,0.69,0.70 0.71,0.72,0.76,0.80,0.82 0.83,0.84,0.85,0.90), mean=0.762, stddev=0.0412], bias-{mean,stddev}=0.03176,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.48e+04, self-repaired-proportion=0.123047, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-05,0.0001,0.002 0.02,0.08,0.34,0.90,1.3 1.6,2.0,2.2,2.6), mean=0.511, stddev=0.521], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0003,0.0009,0.01 0.05,0.15,0.41,0.68,0.81 0.90,0.95,0.98,1.0), mean=0.426, stddev=0.273], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.01,0.01,0.02,0.02 0.02,0.02,0.02,0.02), mean=0.0138, stddev=0.00247], oderiv-count=29184
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.02764, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.97,0.98,0.99 1.0,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.2), mean=1.08, stddev=0.0567], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.70 0.71,0.72,0.76,0.81,0.83 0.84,0.86,0.87,0.90), mean=0.765, stddev=0.0473], bias-{mean,stddev}=-0.06726,0.9592, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.45e+03, self-repaired-proportion=0.127296, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,8e-05,0.0008 0.006,0.05,0.35,0.78,1.1 1.3,1.6,1.8,2.4), mean=0.449, stddev=0.43], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0006,0.004 0.03,0.13,0.39,0.63,0.73 0.81,0.88,0.91,0.99), mean=0.393, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.02,0.03 0.03,0.03,0.03,0.03), mean=0.02, stddev=0.00429], oderiv-count=13312
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.03773, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.96,0.96,0.97 0.98,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.0467], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.0435], bias-{mean,stddev}=0.0009588,1.006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.63e+03, self-repaired-proportion=0.146991, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,1e-05,0.0004 0.003,0.03,0.31,0.82,1.1 1.2,1.4,1.6,2.1), mean=0.436, stddev=0.424], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0002,0.002 0.02,0.09,0.40,0.70,0.79 0.85,0.90,0.92,0.95), mean=0.408, stddev=0.281], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,3e-06,6e-05,0.0003 0.001,0.005,0.02,0.03,0.03 0.03,0.04,0.04,0.04), mean=0.0192, stddev=0.0118], oderiv-count=6144
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=152, learning-rate=0.000868143, max-change=1.5, linear-params-rms=0.03915, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.31,0.76,0.82 0.88,0.96,1.1,1.2,1.2 1.3,1.4,1.4,1.5), mean=1.07, stddev=0.175], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-07,4e-05,0.001,0.006 0.02,0.09,0.47,0.65,0.70 0.74,0.78,0.81,0.90), mean=0.406, stddev=0.26], bias-{mean,stddev}=-4.832e-08,0.003176, rank-in=20, rank-out=76, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=152, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.02,0.02 0.03,0.04,0.05,0.07,0.08 0.10,0.14,0.19,0.24), mean=0.057, stddev=0.031], oderiv-count=7168
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000868143, max-change=0.75, linear-params-rms=0.03612, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0257], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0255], bias-{mean,stddev}=-0.06993,1.031, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.58e+03, self-repaired-proportion=0.198351, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,3e-05,0.0003 0.003,0.02,0.30,0.74,1.0 1.2,1.4,1.6,2.2), mean=0.405, stddev=0.412], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0003,0.002 0.01,0.06,0.46,0.78,0.87 0.91,0.96,0.97,0.99), mean=0.442, stddev=0.319], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-09,1e-08,6e-06,4e-05 0.0002,0.0008,0.005,0.007,0.008 0.008,0.009,0.009,0.01), mean=0.00438, stddev=0.00289], oderiv-count=7680
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=192, learning-rate=0.000868143, max-change=1.5, linear-params-rms=0.01847, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,0.76,0.82 0.86,0.90,0.92,0.95), mean=0.379, stddev=0.344], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,7e-07,0.0003,0.002 0.008,0.04,0.24,0.35,0.39 0.41,0.43,0.44,0.49), mean=0.213, stddev=0.142], bias-{mean,stddev}=1.955e-08,0.00199, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=192, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.02 0.03,0.05,0.05,0.07), mean=0.00811, stddev=0.0119], oderiv-count=8192
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/19.raw MTL/exp/nnet3/multitask/20.raw 
LOG (nnet3-show-progress[5.4.217~1-8ae5]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.27061 tdnn2.affine:1.0566 tdnn3.affine:1.39072 tdnn4.affine:1.48408 tdnn5.affine:1.55107 tdnn6.affine:1.63906 tdnn7.affine:1.76303 tdnn8.affine:1.84076 tdnn9.affine:1.90175 tdnn10.affine:1.88232 tdnn11.affine:1.82357 tdnnFINAL.affine:1.84456 prefinal-affine-task-0.affine:1.14305 output-0.affine:1.06319 prefinal-affine-task-1.affine:0.31022 output-1.affine:0.374546 ]
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:42.0182 tdnn2.affine:40.8399 tdnn3.affine:40.2852 tdnn4.affine:40.2749 tdnn5.affine:40.6028 tdnn6.affine:40.5955 tdnn7.affine:40.1248 tdnn8.affine:41.9519 tdnn9.affine:40.8003 tdnn10.affine:41.3048 tdnn11.affine:41.143 tdnnFINAL.affine:40.1421 prefinal-affine-task-0.affine:40.2129 output-0.affine:13.3772 prefinal-affine-task-1.affine:39.8766 output-1.affine:7.0931 ]
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0302818 tdnn2.affine:0.025886 tdnn3.affine:0.0345534 tdnn4.affine:0.0368873 tdnn5.affine:0.0382483 tdnn6.affine:0.040432 tdnn7.affine:0.044013 tdnn8.affine:0.0439505 tdnn9.affine:0.0466912 tdnn10.affine:0.0456443 tdnn11.affine:0.0443872 tdnnFINAL.affine:0.0460203 prefinal-affine-task-0.affine:0.0284446 output-0.affine:0.0804936 prefinal-affine-task-1.affine:0.00777946 output-1.affine:0.0536673 ]
# Accounting: time=3 threads=1
# Ended (code 0) at Fri Jul 27 01:22:10 UTC 2018, elapsed time 3 seconds

# nnet3-info MTL/exp/nnet3/multitask/41.raw && nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/40.raw MTL/exp/nnet3/multitask/41.raw 
# Started at Fri Jul 27 02:00:45 UTC 2018
#
nnet3-info MTL/exp/nnet3/multitask/41.raw 
num-parameters: 13891160
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=768
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=768 output-dim=768
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=768 output-dim=768
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=768 output-dim=768
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=768 output-dim=768
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=768 output-dim=768
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=1536 output-dim=768
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=768 output-dim=768
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=768 output-dim=768
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=768 output-dim=768
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=768 output-dim=768
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -3), Offset(tdnn4.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=768 output-dim=768
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=768 output-dim=768
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.renorm, -3), Offset(tdnn5.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=768 output-dim=768
component-node name=tdnn6.renorm component=tdnn6.renorm input=tdnn6.relu input-dim=768 output-dim=768
component-node name=tdnn7.affine component=tdnn7.affine input=Append(Offset(tdnn6.renorm, -3), Offset(tdnn6.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn7.relu component=tdnn7.relu input=tdnn7.affine input-dim=768 output-dim=768
component-node name=tdnn7.renorm component=tdnn7.renorm input=tdnn7.relu input-dim=768 output-dim=768
component-node name=tdnn8.affine component=tdnn8.affine input=Append(Offset(tdnn7.renorm, -3), Offset(tdnn7.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn8.relu component=tdnn8.relu input=tdnn8.affine input-dim=768 output-dim=768
component-node name=tdnn8.renorm component=tdnn8.renorm input=tdnn8.relu input-dim=768 output-dim=768
component-node name=tdnn9.affine component=tdnn9.affine input=Append(Offset(tdnn8.renorm, -3), Offset(tdnn8.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn9.relu component=tdnn9.relu input=tdnn9.affine input-dim=768 output-dim=768
component-node name=tdnn9.renorm component=tdnn9.renorm input=tdnn9.relu input-dim=768 output-dim=768
component-node name=tdnn10.affine component=tdnn10.affine input=Append(Offset(tdnn9.renorm, -3), Offset(tdnn9.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn10.relu component=tdnn10.relu input=tdnn10.affine input-dim=768 output-dim=768
component-node name=tdnn10.renorm component=tdnn10.renorm input=tdnn10.relu input-dim=768 output-dim=768
component-node name=tdnn11.affine component=tdnn11.affine input=Append(Offset(tdnn10.renorm, -3), Offset(tdnn10.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnn11.relu component=tdnn11.relu input=tdnn11.affine input-dim=768 output-dim=768
component-node name=tdnn11.renorm component=tdnn11.renorm input=tdnn11.relu input-dim=768 output-dim=768
component-node name=tdnnFINAL.affine component=tdnnFINAL.affine input=Append(Offset(tdnn11.renorm, -3), Offset(tdnn11.renorm, 3)) input-dim=1536 output-dim=768
component-node name=tdnnFINAL.relu component=tdnnFINAL.relu input=tdnnFINAL.affine input-dim=768 output-dim=768
component-node name=tdnnFINAL.renorm component=tdnnFINAL.renorm input=tdnnFINAL.relu input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.affine component=prefinal-affine-task-0.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.relu component=prefinal-affine-task-0.relu input=prefinal-affine-task-0.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-0.renorm component=prefinal-affine-task-0.renorm input=prefinal-affine-task-0.relu input-dim=768 output-dim=768
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-task-0.renorm input-dim=768 output-dim=152
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=152 output-dim=152
output-node name=output-0 input=output-0.log-softmax dim=152 objective=linear
component-node name=prefinal-affine-task-1.affine component=prefinal-affine-task-1.affine input=tdnnFINAL.renorm input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.relu component=prefinal-affine-task-1.relu input=prefinal-affine-task-1.affine input-dim=768 output-dim=768
component-node name=prefinal-affine-task-1.renorm component=prefinal-affine-task-1.renorm input=prefinal-affine-task-1.relu input-dim=768 output-dim=768
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-task-1.renorm input-dim=768 output-dim=192
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=192 output-dim=192
output-node name=output-1 input=output-1.log-softmax dim=192 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.1408, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.76,0.82,0.85,0.89 0.93,0.99,1.1,1.2,1.3 1.4,1.5,1.5,1.6), mean=1.12, stddev=0.154], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.3,3.3,3.5,3.6 3.6,3.7,3.9,4.1,4.1 4.2,4.3,4.3,4.6), mean=3.89, stddev=0.223], bias-{mean,stddev}=0.03015,1.031, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.95e+05, self-repaired-proportion=0.00714046, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.04,0.06,0.25,1.3,1.8 2.2,2.6,2.8,5.1), mean=0.653, stddev=0.779], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.07,0.07 0.08,0.12,0.36,0.86,0.92 0.93,0.94,0.94,0.95), mean=0.457, stddev=0.327], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.0009,0.0009,0.001 0.001,0.001,0.001,0.002,0.002 0.002,0.002,0.003,0.003), mean=0.00144, stddev=0.000413], oderiv-count=286720
component name=tdnn1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.03758, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.97,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.04, stddev=0.038], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.96,0.96,0.98 0.99,1.0,1.0,1.1,1.1 1.1,1.1,1.2,1.2), mean=1.04, stddev=0.0447], bias-{mean,stddev}=0.01178,1.051, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.95e+05, self-repaired-proportion=0.0030506, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.02,0.02,0.03 0.04,0.08,0.34,0.94,1.3 1.5,1.8,2.1,2.5), mean=0.513, stddev=0.502], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.09 0.13,0.19,0.46,0.77,0.85 0.89,0.92,0.93,0.95), mean=0.476, stddev=0.269], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.001,0.002,0.002 0.002,0.002,0.002,0.003), mean=0.00154, stddev=0.000336], oderiv-count=286720
component name=tdnn2.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02708, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.98,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2), mean=1.06, stddev=0.0398], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.69,0.70 0.70,0.72,0.74,0.78,0.80 0.82,0.84,0.85,0.91), mean=0.749, stddev=0.0385], bias-{mean,stddev}=0.01778,1.008, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=9.22e+04, self-repaired-proportion=0.0015811, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.04 0.06,0.11,0.37,1.0,1.4 1.8,2.0,2.3,2.6), mean=0.574, stddev=0.553], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.08,0.11 0.14,0.21,0.41,0.69,0.80 0.86,0.91,0.92,0.94), mean=0.446, stddev=0.24], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.003,0.004,0.004), mean=0.00224, stddev=0.000523], oderiv-count=148480
component name=tdnn3.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02722, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.2,1.2), mean=1.07, stddev=0.0425], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.67,0.68,0.70 0.71,0.72,0.75,0.79,0.81 0.83,0.85,0.86,0.91), mean=0.753, stddev=0.0419], bias-{mean,stddev}=0.007428,1.004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.06e+04, self-repaired-proportion=0.00218023, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.02,0.03,0.04 0.06,0.11,0.32,0.89,1.3 1.6,1.9,2.1,2.7), mean=0.513, stddev=0.504], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.07,0.08,0.10 0.14,0.20,0.38,0.65,0.76 0.83,0.88,0.92,0.94), mean=0.416, stddev=0.227], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.004,0.004,0.004,0.004), mean=0.00263, stddev=0.000567], oderiv-count=138240
component name=tdnn4.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02743, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.2,1.2,1.2), mean=1.07, stddev=0.044], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.70 0.71,0.72,0.75,0.80,0.82 0.84,0.86,0.87,0.93), mean=0.759, stddev=0.0444], bias-{mean,stddev}=0.022,1.015, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=8.81e+04, self-repaired-proportion=0.00151323, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.03,0.04 0.08,0.15,0.38,0.85,1.2 1.5,1.7,1.9,2.3), mean=0.525, stddev=0.454], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.08,0.11 0.16,0.24,0.42,0.63,0.75 0.81,0.88,0.90,0.94), mean=0.436, stddev=0.214], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.003,0.004,0.004 0.004,0.004,0.005,0.005), mean=0.00319, stddev=0.000572], oderiv-count=116736
component name=tdnn5.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02764, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.99,1.0,1.0 1.0,1.0,1.1,1.1,1.1 1.2,1.2,1.2,1.2), mean=1.08, stddev=0.0462], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.68,0.69,0.70 0.71,0.73,0.76,0.80,0.82 0.84,0.86,0.87,0.92), mean=0.765, stddev=0.0425], bias-{mean,stddev}=0.04583,1.007, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.53e+04, self-repaired-proportion=0.00675676, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.02,0.03,0.05 0.07,0.13,0.41,0.86,1.2 1.5,1.8,1.9,2.3), mean=0.533, stddev=0.461], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.06,0.09,0.11 0.14,0.22,0.43,0.65,0.77 0.82,0.90,0.92,0.99), mean=0.442, stddev=0.224], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.004,0.004 0.005,0.005,0.005,0.005), mean=0.00356, stddev=0.00059], oderiv-count=94976
component name=tdnn6.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn7.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02793, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.99,1.0,1.0 1.0,1.0,1.1,1.1,1.2 1.2,1.2,1.2,1.2), mean=1.09, stddev=0.0506], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.68,0.69,0.70 0.71,0.73,0.77,0.82,0.83 0.85,0.87,0.88,0.93), mean=0.773, stddev=0.0469], bias-{mean,stddev}=0.01652,0.9738, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn7.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.38e+04, self-repaired-proportion=0.00721807, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.02,0.03,0.05 0.08,0.13,0.36,0.80,1.1 1.4,1.8,2.0,3.8), mean=0.505, stddev=0.458], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.06,0.08,0.12 0.16,0.23,0.41,0.62,0.72 0.82,0.90,0.93,0.97), mean=0.43, stddev=0.214], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.003,0.003,0.004,0.005,0.005 0.005,0.005,0.006,0.006), mean=0.00411, stddev=0.00065], oderiv-count=79872
component name=tdnn7.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn8.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02811, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.99,0.99,1.0 1.0,1.0,1.1,1.2,1.2 1.2,1.2,1.2,1.2), mean=1.1, stddev=0.0559], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.69,0.70,0.71 0.72,0.73,0.78,0.82,0.84 0.86,0.87,0.88,0.93), mean=0.778, stddev=0.0478], bias-{mean,stddev}=-0.05807,1.063, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn8.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.35e+04, self-repaired-proportion=0.0270337, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0008,0.009,0.03 0.05,0.11,0.37,0.81,1.2 1.4,1.8,2.0,2.7), mean=0.506, stddev=0.458], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.004,0.03,0.07 0.11,0.20,0.42,0.65,0.76 0.82,0.89,0.91,0.96), mean=0.427, stddev=0.233], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.004 0.004,0.004,0.005,0.005,0.006 0.006,0.006,0.006,0.007), mean=0.00474, stddev=0.000776], oderiv-count=67840
component name=tdnn8.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn9.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02825, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.98,0.99,1.0 1.0,1.0,1.1,1.2,1.2 1.2,1.2,1.2,1.2), mean=1.11, stddev=0.0599], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.69,0.69,0.70 0.71,0.73,0.78,0.83,0.85 0.86,0.88,0.89,0.92), mean=0.781, stddev=0.0518], bias-{mean,stddev}=-0.05938,0.998, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn9.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=3.69e+04, self-repaired-proportion=0.0395706, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0004,0.003,0.02 0.05,0.12,0.37,0.81,1.1 1.4,1.7,1.9,2.4), mean=0.493, stddev=0.441], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.003,0.01,0.06 0.12,0.21,0.41,0.64,0.75 0.84,0.90,0.93,0.98), mean=0.423, stddev=0.232], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.004,0.005,0.006,0.007,0.007 0.007,0.007,0.008,0.009), mean=0.00563, stddev=0.000948], oderiv-count=51200
component name=tdnn9.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn10.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02822, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.1, stddev=0.0596], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.68,0.69,0.70 0.72,0.73,0.78,0.83,0.85 0.86,0.88,0.89,0.92), mean=0.78, stddev=0.05], bias-{mean,stddev}=0.02919,1.027, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn10.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=2.84e+04, self-repaired-proportion=0.0573683, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,8e-05,0.002,0.02 0.05,0.11,0.37,0.88,1.2 1.4,1.8,2.0,2.4), mean=0.512, stddev=0.466], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0006,0.009,0.05 0.11,0.20,0.42,0.67,0.78 0.85,0.92,0.95,0.99), mean=0.433, stddev=0.246], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.005,0.005,0.006,0.007,0.007 0.008,0.008,0.008,0.009), mean=0.00603, stddev=0.00107], oderiv-count=44544
component name=tdnn10.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnn11.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02817, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,1.0 1.0,1.0,1.1,1.2,1.2 1.2,1.2,1.2,1.2), mean=1.1, stddev=0.0633], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.69,0.69,0.70 0.71,0.73,0.78,0.82,0.84 0.86,0.87,0.89,0.92), mean=0.779, stddev=0.0495], bias-{mean,stddev}=0.03175,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn11.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=1.95e+04, self-repaired-proportion=0.102539, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,9e-05,0.0003,0.005 0.02,0.09,0.34,0.85,1.2 1.6,2.0,2.1,2.6), mean=0.51, stddev=0.508], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0006,0.002,0.02 0.06,0.18,0.41,0.66,0.81 0.89,0.94,0.97,1.0), mean=0.422, stddev=0.262], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.005,0.005 0.005,0.006,0.007,0.008,0.009 0.009,0.01,0.01,0.01), mean=0.00712, stddev=0.00129], oderiv-count=28672
component name=tdnn11.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=tdnnFINAL.affine type=NaturalGradientAffineComponent, input-dim=1536, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.02824, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.1, stddev=0.0691], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.69,0.70 0.71,0.72,0.78,0.83,0.86 0.87,0.89,0.91,0.95), mean=0.781, stddev=0.0561], bias-{mean,stddev}=-0.06728,0.9591, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnnFINAL.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=7.42e+03, self-repaired-proportion=0.120025, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-05,0.0002,0.002 0.01,0.06,0.33,0.73,1.0 1.2,1.6,1.8,2.4), mean=0.431, stddev=0.415], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.0001,0.0008,0.008 0.04,0.14,0.38,0.59,0.70 0.79,0.88,0.91,0.99), mean=0.381, stddev=0.241], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.007,0.007,0.008 0.008,0.008,0.01,0.01,0.01 0.01,0.01,0.02,0.02), mean=0.0107, stddev=0.00213], oderiv-count=15360
component name=tdnnFINAL.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=prefinal-affine-task-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.03808, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.95,0.96,0.97 0.98,1.0,1.1,1.1,1.1 1.1,1.2,1.2,1.2), mean=1.05, stddev=0.054], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.97,0.98 0.99,1.0,1.1,1.1,1.1 1.1,1.2,1.2,1.2), mean=1.05, stddev=0.0487], bias-{mean,stddev}=0.0008003,1.006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-0.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=5.38e+03, self-repaired-proportion=0.139829, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,2e-05,0.0006 0.007,0.04,0.29,0.68,0.83 0.96,1.1,1.2,1.4), mean=0.369, stddev=0.326], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0002,0.004 0.02,0.10,0.38,0.62,0.70 0.75,0.79,0.80,0.84), mean=0.376, stddev=0.243], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-08,2e-05,4e-05,0.0002 0.0009,0.003,0.01,0.02,0.02 0.02,0.02,0.02,0.02), mean=0.01, stddev=0.00594], oderiv-count=7424
component name=prefinal-affine-task-0.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=152, learning-rate=0.000474342, max-change=1.5, linear-params-rms=0.04487, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.49,0.86,0.91 1.0,1.1,1.3,1.4,1.4 1.5,1.5,1.6,1.7), mean=1.23, stddev=0.198], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-07,0.0005,0.002,0.008 0.03,0.11,0.55,0.74,0.80 0.84,0.90,0.92,1.0), mean=0.468, stddev=0.296], bias-{mean,stddev}=-4.769e-08,0.003281, rank-in=20, rank-out=76, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=152, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.009,0.02,0.02 0.03,0.04,0.05,0.07,0.08 0.10,0.13,0.19,0.24), mean=0.0571, stddev=0.0309], oderiv-count=7168
component name=prefinal-affine-task-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=768, learning-rate=0.000474342, max-change=0.75, linear-params-rms=0.03616, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.0266], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.1), mean=1, stddev=0.026], bias-{mean,stddev}=-0.07009,1.031, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-task-1.relu type=RectifiedLinearComponent, dim=768, self-repair-scale=1e-05, count=4.61e+03, self-repaired-proportion=0.162435, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,5e-05,0.0004 0.004,0.02,0.27,0.63,0.83 0.96,1.1,1.2,1.6), mean=0.348, stddev=0.326], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.0002,0.003 0.02,0.08,0.45,0.72,0.81 0.85,0.90,0.93,0.97), mean=0.42, stddev=0.293], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-09,2e-06,2e-05,7e-05 0.0003,0.001,0.005,0.007,0.008 0.008,0.009,0.009,0.01), mean=0.0044, stddev=0.00282], oderiv-count=8448
component name=prefinal-affine-task-1.renorm type=NormalizeComponent, input-dim=768, output-dim=768, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=768, output-dim=192, learning-rate=0.000474342, max-change=1.5, linear-params-rms=0.02285, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.07,0.07,0.07,0.96,1.0 1.1,1.1,1.1,1.2), mean=0.461, stddev=0.435], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,8e-05,0.0009,0.004 0.01,0.06,0.31,0.43,0.47 0.50,0.52,0.54,0.57), mean=0.266, stddev=0.172], bias-{mean,stddev}=2.563e-08,0.002036, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=192, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.02 0.03,0.05,0.05,0.07), mean=0.00807, stddev=0.012], oderiv-count=6400
nnet3-show-progress --use-gpu=no MTL/exp/nnet3/multitask/40.raw MTL/exp/nnet3/multitask/41.raw 
LOG (nnet3-show-progress[5.4.217~1-8ae5]:SelectGpuId():cu-device.cc:123) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.424934 tdnn2.affine:0.284839 tdnn3.affine:0.386534 tdnn4.affine:0.427871 tdnn5.affine:0.4627 tdnn6.affine:0.493571 tdnn7.affine:0.529346 tdnn8.affine:0.552271 tdnn9.affine:0.563828 tdnn10.affine:0.555699 tdnn11.affine:0.542867 tdnnFINAL.affine:0.549177 prefinal-affine-task-0.affine:0.329055 output-0.affine:0.29806 prefinal-affine-task-1.affine:0.159202 output-1.affine:0.140267 ]
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:42.5033 tdnn2.affine:41.0109 tdnn3.affine:40.5673 tdnn4.affine:40.5924 tdnn5.affine:40.9666 tdnn6.affine:41.014 tdnn7.affine:40.6048 tdnn8.affine:42.4583 tdnn9.affine:41.3446 tdnn10.affine:41.8397 tdnn11.affine:41.6426 tdnnFINAL.affine:40.6285 prefinal-affine-task-0.affine:40.4047 output-0.affine:15.332 prefinal-affine-task-1.affine:39.8969 output-1.affine:8.77511 ]
LOG (nnet3-show-progress[5.4.217~1-8ae5]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.00999864 tdnn2.affine:0.00694579 tdnn3.affine:0.0095292 tdnn4.affine:0.0105419 tdnn5.affine:0.011296 tdnn6.affine:0.0120358 tdnn7.affine:0.0130385 tdnn8.affine:0.0130095 tdnn9.affine:0.01364 tdnn10.affine:0.0132843 tdnn11.affine:0.013039 tdnnFINAL.affine:0.0135193 prefinal-affine-task-0.affine:0.00814431 output-0.affine:0.0195111 prefinal-affine-task-1.affine:0.00399034 output-1.affine:0.0160801 ]
# Accounting: time=4 threads=1
# Ended (code 0) at Fri Jul 27 02:00:49 UTC 2018, elapsed time 4 seconds
